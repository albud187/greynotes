{"version":3,"sources":["components/Home.js","components/MemeTextGen.js","forms/ArchiveTextNoteCheckbox.js","components/TextNotes.js","containers/TextNoteListView.js","forms/TextNoteCreate.js","forms/TextNoteDetailUpdate.js","containers/TextNoteDetailView.js","forms/ArchiveListNoteCheckbox.js","components/ListNotes.js","forms/NoteGroupCreate.js","forms/NoteGroupDelete.js","forms/NoteGroupEdit.js","components/FilterTextNotes.js","containers/ListNoteListView.js","forms/ListNoteTaskCheckbox.js","forms/ListNoteDetailUpdateView.js","containers/ListNoteDetailView.js","forms/ListNoteCreate.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Login.js","containers/Signup.js","routes.js","containers/Layout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["Home","localStorage","Component","MemeTextGen","state","memed_text","HandleMemeGenSubmit","event","preventDefault","textToMeme","target","elements","value","console","log","axios","get","then","res","setState","data","complex_result","this","Item","label","rows","cols","name","placeholder","onSubmit","type","ArchiveTextNoteCheckbox","checked","props","archived","onCheck","noteID","put","author","title","content","style","marginBottom","onChange","id","React","TextNotes","grid","gutter","column","dataSource","renderItem","item","key","Meta","href","date_created","note_group_name","checkArchived","entry","TextNoteListView","active_text_notes","all_text_notes","text_archive_display","fetchAllTextNotes","fetchActiveTextNotes","filter","changeTextArchiveDisplay","status","to","connect","token","TextNoteCreate","note_groups","userid","fetchNoteGroups","result","fetchUserId","user","handleFormSubmit","notegroup","post","note_group","catch","err","for","map","val","group_name","TextNoteDetailUpdate","textnote","textnoteID","alert","defaultValue","textnoteTitle","selected","TextNoteDetail","handleDelete","match","params","delete","forceUpdate","history","push","requestType","textnoteContent","htmlType","ArchiveListNoteCheckbox","ListNotes","NoteGroupCreate","NoteGroupDelete","NoteGroupEdit","handleGroupRename","newgroupname","FilterTextNotes","filtered_notes","filtered_lists","HandleTextNoteFilterSubmit","groupname","htmlFor","ListNoteListView","all_list_notes","active_list_notes","list_archive_display","fetchAllListNotes","fetchActiveListNotes","changeListArchiveDisplay","ListNoteTaskCheckbox","completed","testentry","entry_text","listentryID","parent_list","textstyle","position","updatestyle","left","bottom","delstyle","rowstyle","ListNoteDetailUpdateView","list_note","list_note_entrys","list_note_actual","handleListItemEdit","itemID","parentlist","listentry","handleAddEntry","newlistentry","listnotetID","handleEntryDelete","handleTitleAndGroup","listnotetitle","span","bordered","xIndex","width","ListNoteDetailView","listnote","listnoteID","ListNoteCreate","authSuccess","authFail","error","logout","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","Login","Form","handleSubmit","username","userName","password","pwd","onAuth","getItem","message","class","marginRight","loading","email","expirationDate","Date","getTime","setItem","actions","Signup","confirmDirty","password1","password2","handleConfirmBlur","e","compareToFirstPassword","rule","callback","form","getFieldValue","validateToNextPassword","validateFields","force","BaseRouter","exact","path","component","TextNoteDetailView","Header","Layout","Content","withRouter","Footer","zIndex","className","theme","mode","onClick","padding","marginTop","margin","minHeight","children","App","isAuthenticated","onTryAutosignup","undefined","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","authStart","action","replace","authLogout","reload","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5b15682.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n      {localStorage['token'] ?\r\n      <div>\r\n      <h1> welcome {localStorage['username']} </h1>\r\n      <p>greynotes is a note taking web app </p>\r\n      <p> you can create notes in the form of text and checklists </p>\r\n      </div>\r\n      :\r\n      <div>\r\n      <h1>Log in or sign up</h1>\r\n      <p>greynotes is a note taking web app </p>\r\n      <p> you can create notes in the form of text and checklists </p>\r\n      </div>\r\n      }\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { Form, Input} from 'antd';\r\nimport axios from 'axios';\r\n\r\n\r\nconst output_data = 1\r\n\r\nclass MemeTextGen extends Component {\r\n  state ={\r\n    memed_text: {}\r\n\r\n  }\r\n\r\n\r\n  HandleMemeGenSubmit = (event)=>{\r\n    event.preventDefault()\r\n    const textToMeme = event.target.elements.textToMeme.value;\r\n    console.log(textToMeme);\r\n    axios.get('http://127.0.0.1:8000/api/meme_text'+\r\n    '?textToMeme='+textToMeme, {\r\n      textToMeme: textToMeme\r\n    })\r\n    .then(res => {\r\n    this.setState({\r\n      memed_text: res.data.complex_result\r\n    });\r\n    console.log(\"result is \" + this.state.memed_text)\r\n  });\r\n  }\r\n\r\nrender(){\r\n  return (\r\n      <div>\r\n      {\r\n        this.state.memed_text ?\r\n        (<Form.Item label=\"output\">\r\n            <textarea rows=\"9\" cols=\"50\" name=\"output\" value={this.state.memed_text} />\r\n        </Form.Item>) :\r\n        <Form.Item label=\"output\">\r\n\r\n            <textarea rows=\"9\" cols=\"50\" name=\"output\" placeholder=\"output text\" />\r\n        </Form.Item>\r\n      }\r\n        <form onSubmit={(event)=>this.HandleMemeGenSubmit(event,\r\n        )}>\r\n\r\n\r\n\r\n          <Form.Item label=\"input\">\r\n              <textarea rows=\"9\" cols=\"50\" name=\"textToMeme\" placeholder=\"TEXT TO MEMEMIFY\" />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <button type=\"submit\">Submit</button>\r\n          </Form.Item>\r\n        </form>\r\n\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MemeTextGen\r\n","import React from 'react'\r\nimport { Checkbox, Button } from 'antd';\r\nimport axios from 'axios'\r\n\r\nfunction TrueorFalse(input) {\r\n  if (input = false){\r\n    return(0)\r\n  }\r\n  if (input = true){\r\n    return(1)\r\n  }\r\n\r\n}\r\n\r\nclass ArchiveTextNoteCheckbox extends React.Component {\r\n\r\n  state = {\r\n    checked: this.props.data.archived,\r\n\r\n  };\r\n\r\n  onCheck = (event,noteID) =>{\r\n    event.preventDefault()\r\n    axios.put(`http://127.0.0.1:8000/api/TextNotes/${noteID}/`,{\r\n      archived: event.target.checked,\r\n      author: this.props.data.author,\r\n      title: this.props.data.title,\r\n      content: this.props.data.content\r\n    })\r\n    this.setState({\r\n      checked: event.target.checked,\r\n    });\r\n    console.log(event.target.checked)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <p style={{ marginBottom: '20px' }}>\r\n          <Checkbox\r\n            checked={this.state.checked}\r\n            onChange={(event,noteID)=>this.onCheck(event,this.props.data.id)}\r\n          >\r\n          </Checkbox>\r\n        </p>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArchiveTextNoteCheckbox\r\n","import React from 'react';\r\n\r\nimport { List, Avatar, Space } from 'antd';\r\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport { Card } from 'antd';\r\nimport {Checkbox} from 'antd'\r\nimport axios from 'axios'\r\nimport ArchiveTextNoteCheckbox from '../forms/ArchiveTextNoteCheckbox.js'\r\n\r\n\r\nconst TextNotes =(props)=>{\r\n  var ItemInfo ='blank'\r\n  const ChangeStatus = (event,itemid) =>{\r\n  event.preventDefault()\r\n    console.log('test')\r\n    axios.get(`http://127.0.0.1:8000/api/TextNotes/${itemid}/`)\r\n      .then(res=>{ItemInfo=res.data})\r\n      console.log(ItemInfo)\r\n  }\r\n  return(\r\n\r\n  <List\r\n    grid={{ gutter: 16, column: 4}}\r\n\r\n    dataSource={props.data}\r\n\r\n    renderItem={item => (\r\n      <List.Item key={item.id}>\r\n      <Card>\r\n        <List.Item.Meta\r\n          title={<a href={\"/text_note/\"+`${item.id}`}>\r\n          {item.id} - {item.title}\r\n          </a>}/>\r\n\r\n        <p><strong>date created</strong> : {item.date_created}</p>\r\n        <p><strong>group</strong>: {item.note_group_name}</p>\r\n        <ArchiveTextNoteCheckbox\r\n        data={item}/>\r\n        Archive\r\n\r\n        </Card>\r\n      </List.Item>\r\n    )}\r\n  />\r\n  )\r\n}\r\n\r\nexport default TextNotes\r\n","import React from 'react'\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport { Checkbox } from 'antd';\r\n\r\nimport TextNotes from '../components/TextNotes.js'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction checkArchived(entry){\r\n  return(!entry['archived'])\r\n}\r\n\r\nclass TextNoteListView extends React.Component{\r\n\r\n  state ={\r\n    active_text_notes: [],\r\n    all_text_notes:[],\r\n    text_archive_display:false,\r\n\r\n  }\r\n\r\n  fetchAllTextNotes = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/text_notes_by_user?token=${localStorage['token']}`).then(res => {\r\n      this.setState({\r\n        all_text_notes: res.data\r\n      });\r\n      console.log(res.data)\r\n    });\r\n  }\r\n\r\n  fetchActiveTextNotes = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/text_notes_by_user?token=${localStorage['token']}`).then(res => {\r\n      this.setState({\r\n        active_text_notes: res.data.filter(checkArchived)\r\n      });\r\n      console.log(res.data)\r\n    });\r\n  }\r\n\r\n  changeTextArchiveDisplay = (event) => {\r\n    const status = this.state.text_archive_display\r\n    this.setState({\r\n      text_archive_display: !status\r\n    })\r\n    console.log(status)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchAllTextNotes();\r\n    this.fetchActiveTextNotes();\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n      <h1> TextNoteListView.js</h1>\r\n        <h1>\r\n\r\n          <Checkbox\r\n          checked={this.state.text_archive_display}\r\n          onChange = {(event)=>this.changeTextArchiveDisplay(event)}\r\n          >\r\n          Display Archived Text Notes\r\n\r\n          </Checkbox>\r\n        </h1>\r\n\r\n\r\n      <p> add visual fx on new note button </p>\r\n\r\n      <h2><Link to=\"/create_note\">New Note</Link></h2>\r\n\r\n      {this.state.text_archive_display ?\r\n        <TextNotes data ={this.state.all_text_notes}/>\r\n        :\r\n        <TextNotes data ={this.state.active_text_notes}/>\r\n      }\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.token\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps) (TextNoteListView)\r\n","import React from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nclass TextNoteCreate extends React.Component {\r\n  state ={\r\n    note_groups: [],\r\n    userid:''\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n    axios.get(\"http://127.0.0.1:8000/api/notegroups_by_user?token=\"+localStorage['token']).then(result => {\r\n      this.setState({\r\n        note_groups: result.data\r\n      });\r\n      console.log(result.data)\r\n    });\r\n  }\r\n\r\n  fetchUserId = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/Tokens/${localStorage['token']}/`).then(result=>{\r\n      this.setState({\r\n        userid:result.data.user\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUserId();\r\n    this.fetchNoteGroups();\r\n  }\r\n\r\n  handleFormSubmit = (event)=>{\r\n    event.preventDefault()\r\n    const title = event.target.elements.title.value;\r\n    const content = event.target.elements.content.value;\r\n    const notegroup = event.target.elements.notegroup.value\r\n    console.log(title,content);\r\n    axios.post('http://127.0.0.1:8000/api/TextNotes/', {\r\n      title: title,\r\n      content: content,\r\n      note_group: notegroup,\r\n      author: this.state.userid\r\n    })\r\n      .then(res=>console.log(res))\r\n      .catch(err=>console.log(err));\r\n\r\n  }\r\n\r\nrender(){\r\n  return (\r\n      <div>\r\n      <h1>textnotecreate.js</h1>\r\n        <form onSubmit={(event)=>this.handleFormSubmit(event)}>\r\n          <p>Title</p>\r\n              <textarea rows=\"1\" cols=\"50\" name=\"title\" placeholder=\"title\"/>\r\n          <p>Content</p>\r\n              <textarea rows=\"9\" cols=\"50\" name=\"content\" placeholder=\"content\" />\r\n              <br></br>\r\n          <label for=\"notegroup\">NoteGroup: </label>\r\n            <select name=\"notegroup\" id=\"notegroup\">\r\n            <option value=\"\">_ungrouped_</option>\r\n            {this.state.note_groups.map((val)=>(\r\n              <option value={val.id}>{val.group_name}</option>\r\n            ))}\r\n\r\n            </select>\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <button type=\"submit\">Submit</button>\r\n\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TextNoteCreate;\r\n","import React from 'react';\r\nimport { Input } from 'antd';\r\nimport axios from 'axios';\r\n\r\nclass TextNoteDetailUpdate extends React.Component {\r\n  state ={\r\n    note_groups: [],\r\n    textnote: {},\r\n    userid:''\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n    axios.get(\"http://127.0.0.1:8000/api/notegroups_by_user?token=\"+localStorage['token'])\r\n    .then(result => {this.setState({\r\n        note_groups: result.data\r\n      });\r\n      console.log(result.data)\r\n    });\r\n  }\r\n\r\n  fetchUserId = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/Tokens/${localStorage['token']}/`).then(result=>{\r\n      this.setState({\r\n        userid:result.data.user\r\n      })\r\n    })\r\n  }\r\n\r\n  handleFormSubmit = (event, textnoteID)=>{\r\n    event.preventDefault()\r\n    const title = event.target.elements.title.value;\r\n    const content = event.target.elements.content.value;\r\n    const notegroup = event.target.elements.notegroup.value\r\n\r\n    console.log(title,content);\r\n    axios.put(`http://127.0.0.1:8000/api/TextNotes/${textnoteID}/`, {\r\n        title: title,\r\n        content: content,\r\n        note_group: notegroup,\r\n        author:this.state.userid,\r\n        archived:false\r\n      })\r\n      .then(res=>console.log(res))\r\n      .catch(err=>console.log(err));\r\n      alert('note updated' + ' by user number' +this.state.userid)\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.fetchUserId()\r\n      this.fetchNoteGroups();\r\n        const textnoteID = this.props.textnoteID;\r\n        axios.get(`http://127.0.0.1:8000/api/TextNotes/${textnoteID}/`).then(res => {\r\n          this.setState({\r\n            textnote: res.data\r\n          });\r\n          console.log(\"component did mount \"+this.state.textnote.title)\r\n        });\r\n      }\r\n\r\nrender(){\r\n  return (\r\n      <div>\r\n      <h1>textnoteDetailUpdate.js</h1>\r\n        <form onSubmit={(event, textnoteID)=>this.handleFormSubmit(event, this.props.textnoteID)}>\r\n          <p>Title</p>\r\n              <textarea rows=\"1\" cols=\"50\" name=\"title\" defaultValue = {this.props.textnoteTitle}/>\r\n          <p>Content</p>\r\n              <textarea rows=\"9\" cols=\"50\" name=\"content\" defaultValue={this.state.textnote.content} />\r\n                <br/>\r\n          <label for=\"notegroup\">NoteGroup: </label>\r\n\r\n\r\n              <select name=\"notegroup\" id=\"notegroup\">\r\n                <option value=\"\">_ungrouped_</option>\r\n                {this.state.note_groups.map((val)=>(\r\n                  val.id == this.state.textnote.note_group ? (\r\n                    <option value={val.id} selected >{val.group_name}</option>\r\n                  ):\r\n                  <option value={val.id}>{val.group_name}</option>\r\n                ))}\r\n              </select>\r\n            <br/>\r\n            <br/>\r\n            <button type=\"submit\">Update</button>\r\n        </form>\r\n        <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextNoteDetailUpdate;\r\n","import React from 'react'\r\nimport axios from 'axios';\r\nimport {Button, Card} from 'antd'\r\nimport TextNoteDetailUpdate from '../forms/TextNoteDetailUpdate.js'\r\n\r\nclass TextNoteDetail extends React.Component{\r\n\r\n  state ={\r\n    textnote: {},\r\n    userid:''\r\n  }\r\n\r\n  fetchUserId = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/Tokens/${localStorage['token']}/`).then(result=>{\r\n      this.setState({\r\n        userid:result.data.user\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.fetchUserId();\r\n      const textnoteID = this.props.match.params.textnoteID;\r\n      axios.get(`http://127.0.0.1:8000/api/TextNotes/${textnoteID}/`)\r\n        .then(res => {\r\n        this.setState({\r\n          textnote: res.data\r\n        });\r\n        console.log(this.state.textnote.title)\r\n      });\r\n      console.log('test')\r\n    }\r\n\r\n\r\n    handleDelete = (event) => {\r\n      event.preventDefault()\r\n      const textnoteID = this.props.match.params.textnoteID;\r\n      axios.delete(`http://127.0.0.1:8000/api/TextNotes/${textnoteID}/`)\r\n        this.forceUpdate();\r\n        this.props.history.push('/text_note_list');\r\n        this.forceUpdate();\r\n    }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n\r\n      <h1>textnoteDetailView.js</h1>\r\n\r\n\r\n      {this.state.textnote.author == this.state.userid?\r\n      <TextNoteDetailUpdate\r\n        requestType=\"put\"\r\n        textnoteID={this.props.match.params.textnoteID}\r\n        textnoteContent={this.state.textnote.content}\r\n        textnoteTitle = {this.state.textnote.title}/>\r\n      :\r\n      <h1> You are not logged in as the correct user</h1>\r\n\r\n    }\r\n\r\n    {this.state.textnote.author == this.state.userid ?\r\n\r\n    <form onSubmit={(event)=>this.handleDelete(event)}>\r\n      <Button type='danger' htmlType='submit'>Delete</Button>\r\n    </form>\r\n    :\r\n    <h1> </h1>\r\n    }\r\n\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default TextNoteDetail\r\n","import React from 'react'\r\nimport { Checkbox, Button } from 'antd';\r\nimport axios from 'axios'\r\n\r\nfunction TrueorFalse(input) {\r\n  if (input = false){\r\n    return(0)\r\n  }\r\n  if (input = true){\r\n    return(1)\r\n  }\r\n\r\n}\r\n\r\nclass ArchiveListNoteCheckbox extends React.Component {\r\n\r\n  state = {\r\n    checked: this.props.data.archived,\r\n\r\n  };\r\n\r\n  onCheck = (event,noteID) =>{\r\n    event.preventDefault()\r\n    axios.put(`http://127.0.0.1:8000/api/ListNotes/${noteID}/`,{\r\n      archived: event.target.checked,\r\n      author: this.props.data.author,\r\n      title: this.props.data.title\r\n    })\r\n    this.setState({\r\n      checked: event.target.checked,\r\n    });\r\n    console.log(event.target.checked)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <p style={{ marginBottom: '20px' }}>\r\n          <Checkbox\r\n            checked={this.state.checked}\r\n            onChange={(event,noteID)=>this.onCheck(event,this.props.data.id)}\r\n          >\r\n          </Checkbox>\r\n        </p>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArchiveListNoteCheckbox\r\n","import React from 'react';\r\n\r\nimport { List, Avatar, Space } from 'antd';\r\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport { Card } from 'antd';\r\n\r\nimport ArchiveListNoteCheckbox from '../forms/ArchiveListNoteCheckbox.js'\r\n\r\n\r\nconst ListNotes =(props)=>{\r\n\r\n  return(\r\n\r\n  <List\r\n    grid={{ gutter: 16, column: 4}}\r\n\r\n    dataSource={props.data}\r\n\r\n    renderItem={item => (\r\n      <List.Item key={item.id}>\r\n      <Card>\r\n        <List.Item.Meta\r\n          title={<a href={\"/list_note/\"+`${item.id}`}>\r\n          {item.id} - {item.title}\r\n          </a>}/>\r\n\r\n        <p><strong>date created</strong> : {item.date_created}</p>\r\n        <p><strong>group</strong>: {item.note_group_name}</p>\r\n        <ArchiveListNoteCheckbox\r\n        data={item}/>\r\n        Archive\r\n\r\n        </Card>\r\n      </List.Item>\r\n    )}\r\n  />\r\n  )\r\n}\r\n\r\nexport default ListNotes\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nclass NoteGroupCreate extends Component {\r\n\r\n  state ={\r\n    userid:''\r\n  }\r\n\r\n  handleFormSubmit = (event)=>{\r\n    event.preventDefault()\r\n    const notegroup = event.target.elements.notegroup.value\r\n    axios.post('http://127.0.0.1:8000/api/NoteGroups/',{\r\n      group_name:notegroup,\r\n      author:this.state.userid\r\n    })\r\n  }\r\n\r\n  fetchUserId = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/Tokens/${localStorage['token']}/`).then(result=>{\r\n      this.setState({\r\n        userid:result.data.user\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUserId();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n      <form onSubmit ={(event)=>this.handleFormSubmit(event)}>\r\n        <textarea rows=\"1\" cols=\"50\" name=\"notegroup\" placeholder=\"New Note Group\"/>\r\n        <button type='submit'>add new group</button>\r\n      </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NoteGroupCreate\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nclass NoteGroupDelete extends Component {\r\n\r\n  state ={\r\n    note_groups:[]\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n  axios.get(\"http://127.0.0.1:8000/api/notegroups_by_user?token=\"+localStorage['token']).then(result => {\r\n    this.setState({\r\n      note_groups: result.data\r\n    });\r\n    console.log(result.data)\r\n  });\r\n}\r\n\r\ncomponentDidMount() {\r\n    this.fetchNoteGroups();\r\n  }\r\n\r\n  handleDelete=(event) => {\r\n    event.preventDefault()\r\n    const notegroup = event.target.elements.notegroup.value\r\n    axios.delete(`http://127.0.0.1:8000/api/NoteGroups/${notegroup}/`)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n      <form onSubmit ={(event)=>this.handleDelete(event)}>\r\n      <label for=\"notegroup\">Delete </label>\r\n        <select name=\"notegroup\" id=\"notegroup\">\r\n        {this.state.note_groups.map((val)=>(\r\n          <option value={val.id}>{val.group_name}</option>\r\n        ))}\r\n\r\n        </select>\r\n\r\n        <button type=\"submit\">Delete</button>\r\n\r\n        </form>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default NoteGroupDelete\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nclass NoteGroupEdit extends Component {\r\n\r\n  state ={\r\n    note_groups:[],\r\n    userid:''\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n  axios.get(\"http://127.0.0.1:8000/api/notegroups_by_user?token=\"+localStorage['token']).then(result => {\r\n    this.setState({\r\n      note_groups: result.data\r\n    });\r\n    console.log(result.data)\r\n  });\r\n}\r\n\r\nfetchUserId = () => {\r\n  axios.get(`http://127.0.0.1:8000/api/Tokens/${localStorage['token']}/`).then(result=>{\r\n    this.setState({\r\n      userid:result.data.user\r\n    })\r\n  })\r\n}\r\ncomponentDidMount() {\r\n    this.fetchUserId()\r\n    this.fetchNoteGroups();\r\n  }\r\n\r\n  handleGroupRename =(event)=>{\r\n    event.preventDefault()\r\n    const notegroup = event.target.elements.notegroup.value;\r\n    const newgroupname = event.target.elements.newgroupname.value;\r\n    axios.put(`http://127.0.0.1:8000/api/NoteGroups/${notegroup}/`,{\r\n      group_name:newgroupname,\r\n      author: this.state.userid\r\n\r\n\r\n    })\r\n    .then(res=>console.log(res))\r\n    .catch(err=>console.log(err));\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n      <form onSubmit ={(event)=>this.handleGroupRename(event)}>\r\n      <label for=\"notegroup\">Rename </label>\r\n        <select name=\"notegroup\" id=\"notegroup\">\r\n        {this.state.note_groups.map((val)=>(\r\n          <option value={val.id}>{val.group_name}</option>\r\n        ))}\r\n\r\n        </select>\r\n\r\n        <textarea rows=\"1\" cols=\"50\" name=\"newgroupname\"/>\r\n\r\n        <button type=\"submit\">Rename</button>\r\n\r\n        </form>\r\n        </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default NoteGroupEdit\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport TextNotes from './TextNotes.js'\r\nimport ListNotes from './ListNotes.js'\r\nimport NoteGroupCreate from '../forms/NoteGroupCreate.js'\r\nimport NoteGroupDelete from '../forms/NoteGroupDelete.js'\r\nimport NoteGroupEdit from '../forms/NoteGroupEdit.js'\r\n\r\nclass FilterTextNotes extends Component {\r\n\r\n  state ={\r\n    note_groups: [],\r\n    filtered_notes: [],\r\n    filtered_lists: [],\r\n    userid:''\r\n\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n    axios.get(\"http://127.0.0.1:8000/api/notegroups_by_user?token=\"+localStorage['token']).then(result => {\r\n      this.setState({\r\n        note_groups: result.data\r\n      });\r\n      console.log(result.data)\r\n    });\r\n  }\r\n\r\n  fetchUserId = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/Tokens/${localStorage['token']}/`).then(result=>{\r\n      this.setState({\r\n        userid:result.data.user\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUserId();\r\n    this.fetchNoteGroups();\r\n  }\r\n\r\n  HandleTextNoteFilterSubmit = (event)=>{\r\n    event.preventDefault()\r\n    const groupname = event.target.elements.notegroup.value;\r\n    console.log(groupname);\r\n\r\n    axios.get('http://127.0.0.1:8000/api/query_list_notes'+\r\n    '?groupname='+groupname +'&userid='+this.state.userid, {\r\n      groupname: groupname\r\n    })\r\n    .then(res => {\r\n    this.setState({\r\n      filtered_lists: res.data\r\n    });\r\n    console.log(\"result is \" + this.state.filtered_lists)\r\n  });\r\n\r\n    axios.get('http://127.0.0.1:8000/api/query_text_notes'+\r\n    '?groupname='+groupname+'&userid='+this.state.userid, {\r\n      groupname: groupname\r\n    })\r\n    .then(res => {\r\n    this.setState({\r\n      filtered_notes: res.data\r\n    });\r\n    console.log(\"result is \" + this.state.filtered_notes)\r\n  });\r\n  }\r\n\r\nrender(){\r\n  return (\r\n      <div>\r\n      <NoteGroupCreate />\r\n      <NoteGroupDelete />\r\n      <NoteGroupEdit />\r\n    <form  onSubmit={(event)=>this.HandleTextNoteFilterSubmit(event)}>\r\n    <label htmlFor=\"notegroup\">Filter </label>\r\n      <select name=\"notegroup\" id=\"notegroup\">\r\n      <option value=\"\">ALL</option>\r\n      {this.state.note_groups.map((val)=>(\r\n        <option value={val.group_name}>{val.group_name}</option>\r\n      ))}\r\n\r\n      </select>\r\n\r\n\r\n      <button type=\"submit\">Filter</button>\r\n      <h1> Text Notes <Link to=\"/create_note\">(New Text Note)</Link> </h1>\r\n      <TextNotes data ={this.state.filtered_notes}/>\r\n      <h1> List Notes <Link to=\"/create_list\">(New List Note)</Link> </h1>\r\n      <ListNotes data = {this.state.filtered_lists}/>\r\n      </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FilterTextNotes\r\n","import React from 'react'\r\nimport axios from 'axios';\r\nimport { Checkbox } from 'antd';\r\nimport {Link} from 'react-router-dom'\r\nimport ListNotes from '../components/ListNotes.js'\r\n\r\nfunction checkArchived(entry){\r\n  return(!entry['archived'])\r\n}\r\n\r\nclass ListNoteListView extends React.Component{\r\n\r\n  state ={\r\n    all_list_notes: [],\r\n    active_list_notes:[],\r\n    list_archive_display:false,\r\n\r\n  }\r\n\r\n  fetchAllListNotes = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/list_notes_by_user?token=${localStorage['token']}`).then(res => {\r\n      this.setState({\r\n        all_list_notes: res.data\r\n      });\r\n      console.log(res.data)\r\n    });\r\n  }\r\n\r\n  fetchActiveListNotes = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/list_notes_by_user?token=${localStorage['token']}`).then(res => {\r\n      this.setState({\r\n        active_list_notes: res.data.filter(checkArchived)\r\n      });\r\n      console.log(res.data)\r\n    });\r\n  }\r\n\r\n  changeListArchiveDisplay = (event) => {\r\n    const status = this.state.list_archive_display\r\n    this.setState({\r\n      list_archive_display: !status\r\n    })\r\n    console.log(status)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchAllListNotes();\r\n    this.fetchActiveListNotes();\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n      <h1> ListNoteListView.js</h1>\r\n      <Checkbox\r\n      checked={this.state.list_archive_display}\r\n      onChange = {(event)=>this.changeListArchiveDisplay(event)}\r\n      >\r\n      Display Archived List Notes\r\n      </Checkbox>\r\n\r\n      <h2><Link to=\"/create_list\">New List Note</Link></h2>\r\n\r\n      {this.state.list_archive_display ?\r\n        <ListNotes data ={this.state.all_list_notes}/>\r\n        :\r\n        <ListNotes data ={this.state.active_list_notes}/>\r\n      }\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListNoteListView\r\n","import React from 'react'\r\nimport { Checkbox, Button } from 'antd';\r\nimport axios from 'axios'\r\n\r\nfunction TrueorFalse(input) {\r\n  if (input = false){\r\n    return(0)\r\n  }\r\n  if (input = true){\r\n    return(1)\r\n  }\r\n\r\n}\r\n\r\nclass ListNoteTaskCheckbox extends React.Component {\r\n\r\n  state = {\r\n    checked: this.props.data.completed,\r\n    testentry: this.props.data.entry_text\r\n\r\n  };\r\n\r\n  onCheck = (event,listentryID) =>{\r\n    event.preventDefault()\r\n    axios.put(`http://127.0.0.1:8000/api/ListNoteEntrysAll/${listentryID}/`,{\r\n      parent_list: this.props.data.parent_list,\r\n      completed: event.target.checked\r\n    })\r\n    this.setState({\r\n      checked: event.target.checked,\r\n    });\r\n    console.log(event.target.checked)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <p style={{ marginBottom: '20px' }}>\r\n          <Checkbox\r\n            checked={this.state.checked}\r\n            onChange={(event,listentryID)=>this.onCheck(event,this.props.data.id)}\r\n          >\r\n          </Checkbox>\r\n        </p>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListNoteTaskCheckbox\r\n","import React from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport axios from 'axios';\r\nimport { List,Card } from 'antd';\r\nimport { Checkbox } from 'antd';\r\nimport { Row, Col } from 'antd';\r\nimport ListNoteTaskCheckbox from './ListNoteTaskCheckbox.js'\r\n\r\nconst textstyle = {\r\n  position: \"relative\",\r\n\r\n}\r\n\r\nconst updatestyle = {\r\n     position: \"relative\",\r\n     left: \"25px\",\r\n     bottom:\"10px\"\r\n\r\n   };\r\n\r\nconst delstyle ={\r\n  position: \"relative\",\r\n  left: \"25px\",\r\n  bottom:\"5px\"\r\n}\r\n\r\nconst rowstyle = {\r\n  marginBottom: '-4%'\r\n}\r\n\r\nclass ListNoteDetailUpdateView extends React.Component {\r\n\r\n  state ={\r\n    note_groups: [],\r\n    list_note: {},\r\n    list_note_entrys: [],\r\n    list_note_actual:{},\r\n    userid:''\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n    axios.get(\"http://127.0.0.1:8000/api/notegroups_by_user?token=\"+localStorage['token'])\r\n    .then(result => {this.setState({\r\n        note_groups: result.data\r\n      });\r\n      console.log(result.data)\r\n    });\r\n  }\r\n\r\n  fetchUserId = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/Tokens/${localStorage['token']}/`).then(result=>{\r\n      this.setState({\r\n        userid:result.data.user\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  handleListItemEdit =(event,itemID,parentlist)=>{\r\n    event.preventDefault()\r\n    const listentry = event.target.elements.listentry.value;\r\n    console.log(listentry, parentlist)\r\n    axios.put(`http://127.0.0.1:8000/api/ListNoteEntrysAll/${itemID}/`,{\r\n      entry_text:listentry,\r\n      parent_list:parentlist,\r\n\r\n    })\r\n    .then(res=>console.log(res))\r\n    .catch(err=>console.log(err));\r\n\r\n  }\r\n\r\n  handleAddEntry = (event,parentlist) =>{\r\n    event.preventDefault()\r\n    const newlistentry = event.target.elements.newlistentry.value;\r\n    axios.post('http://127.0.0.1:8000/api/ListNoteEntrysAll/',{\r\n      entry_text:newlistentry,\r\n      parent_list:parentlist,\r\n    })\r\n\r\n    axios.get('http://127.0.0.1:8000/api/ListNoteEntrysList/?parentlist=' +parentlist)\r\n    .then(result =>{this.setState({\r\n      list_note_entrys: result.data,\r\n      list_note:this.props.listnotetID\r\n    });\r\n    })\r\n\r\n    axios.get('http://127.0.0.1:8000/api/ListNoteEntrysList/?parentlist=' +parentlist)\r\n    .then(result =>{this.setState({\r\n      list_note_entrys: result.data,\r\n      list_note:this.props.listnotetID\r\n    });\r\n    })\r\n  }\r\n\r\n  handleEntryDelete = (event,listentryID,parentlist) =>{\r\n    event.preventDefault()\r\n    axios.delete(`http://127.0.0.1:8000/api/ListNoteEntrysAll/${listentryID}/`)\r\n\r\n      axios.get('http://127.0.0.1:8000/api/ListNoteEntrysList/?parentlist=' +parentlist)\r\n      .then(result =>{this.setState({\r\n        list_note_entrys: result.data,\r\n        list_note:this.props.listnotetID\r\n      });\r\n      })\r\n\r\n      axios.get('http://127.0.0.1:8000/api/ListNoteEntrysList/?parentlist=' +parentlist)\r\n      .then(result =>{this.setState({\r\n        list_note_entrys: result.data,\r\n        list_note:this.props.listnotetID\r\n      });\r\n      })\r\n\r\n      axios.get('http://127.0.0.1:8000/api/ListNoteEntrysList/?parentlist=' +parentlist)\r\n      .then(result =>{this.setState({\r\n        list_note_entrys: result.data,\r\n        list_note:this.props.listnotetID\r\n      });\r\n      })\r\n\r\n  }\r\n\r\n  handleTitleAndGroup = (event) =>{\r\n    event.preventDefault()\r\n    const title = event.target.elements.title.value;\r\n    const notegroup = event.target.elements.notegroup.value\r\n    axios.put(`http://127.0.0.1:8000/api/ListNotes/${this.props.listnotetID}/`, {\r\n    title: title,\r\n    note_group: notegroup,\r\n    author:this.state.userid\r\n  })\r\n  .then(res=>console.log(res))\r\n  .catch(err=>console.log(err));\r\n  alert('note updated')\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.fetchUserId()\r\n    this.fetchNoteGroups();\r\n    const listnotetID = this.props.listnotetID\r\n    axios.get('http://127.0.0.1:8000/api/ListNoteEntrysList/?parentlist=' +listnotetID)\r\n    .then(result => {this.setState({\r\n        list_note_entrys: result.data,\r\n        list_note:this.props.listnotetID\r\n        });\r\n  })\r\n    axios.get(`http://127.0.0.1:8000/api/ListNotes/${this.props.listnotetID}/`)\r\n      .then(result =>{this.setState({\r\n        list_note_actual:result.data\r\n      })})\r\n\r\n  }\r\n\r\n    render(){\r\n        return(\r\n      <div>\r\n\r\n      <form onSubmit={(event)=>this.handleTitleAndGroup(event)}>\r\n      <p>Title { this.state.list_note.note_group}</p>\r\n        <textarea rows=\"1\" cols=\"50\" name=\"title\" defaultValue = {this.props.listnotetitle}/>\r\n      <select name=\"notegroup\" id=\"notegroup\">\r\n            <option value=\"\">_ungrouped_</option>\r\n            {this.state.note_groups.map((val)=>(\r\n              val.id == this.state.list_note_actual.note_group ? (\r\n                <option value={val.id} selected >{val.group_name}</option>\r\n              ):\r\n              <option value={val.id}>{val.group_name}</option>\r\n            ))}\r\n      </select>\r\n      <button type=\"submit\">Update</button>\r\n      </form>\r\n      <Row>\r\n        <Col span={120}>\r\n\r\n        <List\r\n          dataSource={this.state.list_note_entrys}\r\n          bordered\r\n          renderItem={item => (\r\n            <Row style ={rowstyle}>\r\n              <List.Item key={item.id}>\r\n              <Col span ={1}>\r\n              <ListNoteTaskCheckbox data={item} style={{ position: 'relative', xIndex: 2, width: '10%' }}></ListNoteTaskCheckbox>\r\n              </Col>\r\n\r\n              <Col span ={20}>\r\n\r\n                <form\r\n                onSubmit={(event,itemID,parentlist)=>this.handleListItemEdit(event,item.id,item.parent_list)}\r\n                >\r\n                <tr>\r\n                <th>\r\n                  <div style={textstyle}>\r\n                    <textarea rows=\"1\" cols=\"60\" name=\"listentry\" defaultValue = {item.entry_text}/>\r\n                  </div>\r\n                </th>\r\n                <th>\r\n                  <div style={updatestyle}>\r\n                    <button type=\"submit\">*UPDATE*</button>\r\n                  </div>\r\n                </th>\r\n                </tr>\r\n                </form>\r\n\r\n              </Col>\r\n\r\n              <Col span={1}>\r\n              <div style={delstyle}>\r\n                <form\r\n                onSubmit = {(event,listentryID,parentlist)=>this.handleEntryDelete(event,item.id,item.parent_list)}>\r\n                  <button type=\"submit\">*DELETE*</button>\r\n                </form>\r\n              </div>\r\n              </Col>\r\n                </List.Item>\r\n              </Row>\r\n            )}\r\n            />\r\n            </Col>\r\n          </Row>\r\n          <br></br>\r\n\r\n          <form onSubmit={(event,parentlist)=>this.handleAddEntry(event,this.state.list_note)}>\r\n          <textarea rows=\"1\" cols=\"50\" name=\"newlistentry\" placeholder='new list item'/>\r\n          <button type=\"submit\">*ADD*</button>\r\n          </form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListNoteDetailUpdateView\r\n","import React from 'react'\nimport axios from 'axios';\nimport {Button, Card} from 'antd'\nimport ListNoteDetailUpdateView from '../forms/ListNoteDetailUpdateView.js'\n\nclass ListNoteDetailView extends React.Component {\n  state ={\n    listnote: {},\n    userid:''\n}\n\nfetchUserId = () => {\n  axios.get(`http://127.0.0.1:8000/api/Tokens/${localStorage['token']}/`).then(result=>{\n    this.setState({\n      userid:result.data.user\n    })\n  })\n}\n  componentDidMount() {\n    this.fetchUserId()\n    const listnoteID = this.props.match.params.listnoteID;\n    axios.get(`http://127.0.0.1:8000/api/ListNotes/${listnoteID}/`)\n      .then(res => {\n      this.setState({\n        listnote: res.data\n      });\n      console.log(this.state.listnote.id +' - '+ this.state.listnote.title)\n    });\n  }\n\n  handleDelete = (event) => {\n      event.preventDefault()\n      const listnoteID = this.props.match.params.listnoteID;\n\n      axios.delete(`http://127.0.0.1:8000/api/ListNotes/${listnoteID}/`)\n        this.forceUpdate();\n        this.props.history.push('/list_note_list');\n        this.forceUpdate();\n    }\n\n  render() {\n    return (\n      <div>ListNoteDetailView.js\n      {this.state.listnote.author == this.state.userid ?\n        <ListNoteDetailUpdateView\n        listnotetID={this.props.match.params.listnoteID}\n        listnotetitle = {this.state.listnote.title}\n        />\n        :\n        <h1>You are not logged in as the correct user</h1>\n      }\n\n      {this.state.listnote.author == this.state.userid ?\n        <form onSubmit={(event)=>this.handleDelete(event)}>\n          <Button type='danger' htmlType='submit'>Delete</Button>\n        </form>\n        :\n        <h1> </h1>\n      }\n\n      </div>\n\n\n    )\n  }\n}\n\nexport default ListNoteDetailView\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass ListNoteCreate extends React.Component {\r\n  state ={\r\n    note_groups: [],\r\n    userid:''\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n    axios.get(\"http://127.0.0.1:8000/api/notegroups_by_user?token=\"+localStorage['token']).then(result => {\r\n      this.setState({\r\n        note_groups: result.data\r\n      });\r\n      console.log(result.data)\r\n    });\r\n  }\r\n\r\n  fetchUserId = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/Tokens/${localStorage['token']}/`).then(result=>{\r\n      this.setState({\r\n        userid:result.data.user\r\n      })\r\n    })\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.fetchUserId();\r\n    this.fetchNoteGroups();\r\n  }\r\n\r\n  handleFormSubmit = (event)=>{\r\n  event.preventDefault()\r\n  const title = event.target.elements.title.value;\r\n  const notegroup = event.target.elements.notegroup.value\r\n  console.log(title);\r\n  axios.post('http://127.0.0.1:8000/api/ListNotes/', {\r\n    title: title,\r\n    note_group: notegroup,\r\n    author: this.state.userid\r\n\r\n  })\r\n    .then(res=>console.log(res))\r\n    .catch(err=>console.log(err));\r\n    console.log(title)\r\n    console.log(notegroup)\r\n\r\n\r\n\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <h1>ListNoteCreate.js</h1>\r\n\r\n      <form onSubmit={(event)=>this.handleFormSubmit(event)}>\r\n      <p>Title</p>\r\n    <textarea rows=\"1\" cols=\"50\" name=\"title\" placeholder=\"title\"/>\r\n\r\n    <label for=\"notegroup\">NoteGroup: </label>\r\n      <select name=\"notegroup\" id=\"notegroup\">\r\n      <option value=\"\">_ungrouped_</option>\r\n      {this.state.note_groups.map((val)=>(\r\n        <option value={val.id}>{val.group_name}</option>\r\n      ))}\r\n\r\n        </select>\r\n        <button type='submit'>submit</button>\r\n      </form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListNoteCreate\r\n","import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = token => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('username');\n\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n     window.location.reload(false)\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n}\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://127.0.0.1:8000/rest-auth/login/', {\n            username: username,\n            email:\"\",\n            password: password\n        })\n\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            localStorage.setItem('username',username)\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n            console.log(token)\n\n            axios.get(`http://127.0.0.1:8000/api/Tokens/${token}/`)\n              .then(result =>{\n                const userid = result.data.user\n                localStorage.setItem('userid', userid);\n              })\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n\n        })\n    }\n}\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://127.0.0.1:8000/rest-auth/registration/', {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if ( expirationDate <= new Date() ) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000) );\n            }\n        }\n    }\n}\n","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import React from 'react'\r\nimport { Form, Input, Button, Spin } from 'antd';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as actions from '../store/actions/auth';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass Login extends React.Component {\r\n  handleSubmit = (event) => {\r\n    this.forceUpdate()\r\n    const username = event.target.elements.userName.value\r\n    const password = event.target.elements.pwd.value\r\n    this.props.onAuth(username, password);\r\n    this.props.history.push('/');\r\n    console.log('token is ' + localStorage.getItem('token'))\r\n    this.forceUpdate()\r\n    };\r\n\r\n\r\n\r\n  render() {\r\n    let errorMessage = null;\r\n    if (this.props.error) {\r\n        errorMessage = (\r\n            <p>{this.props.error.message}</p>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n        <form onSubmit={(event)=>this.handleSubmit(event)} class=\"loginform\">\r\n            <input name='userName' placeholder= \"username\"/>\r\n            <br/>\r\n            <input type=\"password\" name=\"pwd\" placeholder=\"password\" />\r\n            <br/>\r\n\r\n            <button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\r\n                Login\r\n            </button>\r\n\r\n          </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as actions from '../store/actions/auth';\r\nimport { Form, Input, Button, Spin} from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Signup extends React.Component {\r\n\r\n  state = {\r\n  confirmDirty: false,\r\n};\r\n\r\nhandleSubmit = (event) => {\r\n  event.preventDefault();\r\n  const username = event.target.elements.userName.value\r\n  const email = event.target.elements.email.value\r\n  const password1 = event.target.elements.password1.value\r\n  const password2 = event.target.elements.password2.value\r\n  this.props.onAuth(\r\n    username,\r\n    email,\r\n    password1,\r\n    password2\r\n  )\r\n  this.props.history.push('/');\r\n\r\n}\r\n\r\nhandleConfirmBlur = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  }\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n            <form onSubmit={(event)=>this.handleSubmit(event)} class=\"loginform\">\r\n                <input name='userName' placeholder= \"username\"/>\r\n                <br/>\r\n                <input name='email' placeholder= \"email\"/>\r\n                <br/>\r\n                <input type=\"password\" name=\"password1\" placeholder=\"password\" />\r\n                <br/>\r\n                <input type=\"password\" name=\"password2\" placeholder=\"password\" />\r\n                <br/>\r\n\r\n                <button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\r\n                    Signup\r\n                </button>\r\n\r\n              </form>\r\n          </div>    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport Home from './components/Home.js'\r\n\r\nimport MemeTextGen from './components/MemeTextGen.js'\r\n\r\nimport TextNoteListView from './containers/TextNoteListView.js'\r\nimport TextNoteCreate from './forms/TextNoteCreate.js'\r\nimport TextNoteDetailView from './containers/TextNoteDetailView.js'\r\nimport FilterTextNotes from './components/FilterTextNotes'\r\n\r\nimport ListNoteListView from './containers/ListNoteListView.js'\r\nimport ListNoteDetailView from './containers/ListNoteDetailView.js'\r\nimport ListNoteCreate from './forms/ListNoteCreate.js'\r\n\r\nimport Login from './containers/Login.js'\r\nimport Signup from './containers/Signup.js'\r\n\r\nconst BaseRouter =() => (\r\n  <div>\r\n    <Route exact path ='/' component ={Home} />\r\n\r\n    <Route exact path ='/create-article/' component ={TextNoteCreate} />\r\n    <Route exact path='/meme-text-gen/' component = {MemeTextGen} />\r\n\r\n    <Route exact path='/text_note_list' component = {TextNoteListView} />\r\n    <Route exact path='/filter_notes' component = {FilterTextNotes} />\r\n    <Route exact path='/create_note' component = {TextNoteCreate} />\r\n    <Route exact path='/text_note/:textnoteID' component = {TextNoteDetailView} />\r\n\r\n    <Route exact path='/list_note_list' component = {ListNoteListView} />\r\n    <Route exact path='/list_note/:listnoteID' component = {ListNoteDetailView} />\r\n    <Route exact path ='/create_list' component ={ListNoteCreate}/>\r\n\r\n    <Route exact path='/login/' component = {Login}/>\r\n    <Route exact path='/signup/' component = {Signup}/>\r\n  </div>\r\n)\r\n\r\n\r\n\r\nexport default BaseRouter\r\n","import React from 'react';\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../store/actions/auth';\r\nimport axios from 'axios'\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst CustomLayout = (props)=>{\r\n\r\n  return(\r\n    <Layout>\r\n      <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n        <div className=\"logo\" />\r\n        <Menu theme=\"dark\" mode=\"horizontal\">\r\n        <Menu.Item><Link to='/'>Home</Link></Menu.Item>\r\n\r\n          {localStorage['token'] ?\r\n          <Menu.Item onClick = {props.logout} >Logout</Menu.Item>\r\n          :\r\n          <Menu.Item ><Link to='/login/'>Login</Link></Menu.Item>\r\n          }\r\n\r\n\r\n          {localStorage['token'] ?\r\n          <Menu.Item><strong>Welcome {localStorage['username']}</strong></Menu.Item>\r\n          :\r\n          <Menu.Item><Link to='/signup/'>Sign up</Link></Menu.Item>\r\n          }\r\n\r\n        </Menu>\r\n      </Header>\r\n      <Content className=\"site-layout\" style={{ padding: '0 50px', marginTop: 64 }}>\r\n  {localStorage['token'] ?\r\n        <Breadcrumb style={{ margin: '16px 0' }}>\r\n          <Breadcrumb.Item><Link to=\"/text_note_list\">Text Notes</Link></Breadcrumb.Item>\r\n          <Breadcrumb.Item><Link to=\"/list_note_list\">List Notes</Link></Breadcrumb.Item>\r\n          <Breadcrumb.Item><Link to=\"/filter_notes\">Note Groups</Link></Breadcrumb.Item>\r\n          <Breadcrumb.Item><Link to=\"/meme-text-gen/\">Meme Text Generator</Link></Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        :\r\n        <h1> </h1>\r\n      }\r\n        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 380 }}>\r\n          {props.children}\r\n        </div>\r\n      </Content>\r\n\r\n\r\n    </Layout>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(CustomLayout));\r\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {connect} from 'react-redux'\nimport BaseRouter from './routes';\nimport 'antd/dist/antd.css'\nimport CustomLayout from './containers/Layout.js'\n\nimport * as actions from './store/actions/auth.js'\n\nclass App extends Component {\n  render(){\n  return (\n      <div className=\"App\">\n\n      <Router>\n        <CustomLayout {...this.props}>\n          <BaseRouter/>\n        </CustomLayout>\n      </Router>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null,\n    token: state.token\n  }\n}\n\nconst mapDispatchToProps = dispatch =>{\n  return{\n    onTryAutosignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nimport axios from 'axios'\n\nconst initialState = {\n    token: null,\n    error: null,\n    loading: false,\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n}\n\nconst authSuccess = (state, action) => {\n  window.location.replace('/')\n    return updateObject(state, {\n        token: action.token,\n        error: null,\n        loading: false,\n    });\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n}\n\nconst authLogout = (state, action) => {\n    window.location.reload(true)\n    window.location.replace('/')\n    return updateObject(state, {\n        token: null\n    });\n\n}\n\nconst reducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\n\nimport reducer from './store/reducers/auth'\n\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhances(\n  applyMiddleware(thunk)\n))\n\nconst app = (\n  <Provider store = {store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}