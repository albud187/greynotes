{"version":3,"sources":["components/Home.js","api_path.js","components/MemeTextGen.js","forms/ArchiveTextNoteCheckbox.js","components/TextNotes.js","containers/TextNoteListView.js","forms/TextNoteCreate.js","forms/TextNoteDetailUpdate.js","containers/TextNoteDetailView.js","forms/ArchiveListNoteCheckbox.js","components/ListNotes.js","forms/NoteGroupCreate.js","forms/NoteGroupDelete.js","forms/NoteGroupEdit.js","components/FilterTextNotes.js","containers/ListNoteListView.js","forms/ListNoteTaskCheckbox.js","forms/ListNoteDetailUpdateView.js","containers/ListNoteDetailView.js","forms/ListNoteCreate.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Login.js","containers/Signup.js","routes.js","containers/Layout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["Home","localStorage","Component","API_PATH","MemeTextGen","state","memed_text","HandleMemeGenSubmit","event","preventDefault","textToMeme","target","elements","value","console","log","axios","get","then","res","setState","data","complex_result","this","Item","label","rows","cols","name","placeholder","onSubmit","type","ArchiveTextNoteCheckbox","checked","props","archived","onCheck","noteID","put","API_PATHS","author","title","content","style","marginBottom","onChange","id","React","TextNotes","grid","gutter","column","dataSource","renderItem","item","key","Meta","href","date_created","note_group_name","checkArchived","entry","TextNoteListView","active_text_notes","all_text_notes","text_archive_display","fetchAllTextNotes","fetchActiveTextNotes","filter","changeTextArchiveDisplay","status","to","connect","token","TextNoteCreate","note_groups","userid","fetchNoteGroups","result","fetchUserId","user","handleFormSubmit","notegroup","post","note_group","catch","err","history","push","for","map","val","group_name","TextNoteDetailUpdate","textnote","textnoteID","alert","defaultValue","textnoteTitle","selected","TextNoteDetail","handleDelete","match","params","delete","forceUpdate","requestType","textnoteContent","htmlType","ArchiveListNoteCheckbox","ListNotes","NoteGroupCreate","NoteGroupDelete","NoteGroupEdit","handleGroupRename","newgroupname","FilterTextNotes","filtered_notes","filtered_lists","HandleTextNoteFilterSubmit","groupname","htmlFor","ListNoteListView","all_list_notes","active_list_notes","list_archive_display","fetchAllListNotes","fetchActiveListNotes","changeListArchiveDisplay","ListNoteTaskCheckbox","completed","testentry","entry_text","listentryID","parent_list","textstyle","position","updatestyle","left","bottom","delstyle","rowstyle","ListNoteDetailUpdateView","list_note","list_note_entrys","list_note_actual","handleListItemEdit","itemID","parentlist","listentry","handleAddEntry","newlistentry","listnotetID","handleEntryDelete","handleTitleAndGroup","listnotetitle","span","bordered","xIndex","width","ListNoteDetailView","listnote","listnoteID","ListNoteCreate","authSuccess","authFail","error","logout","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","Login","Form","handleSubmit","username","userName","password","pwd","onAuth","getItem","message","class","marginRight","loading","email","expirationDate","Date","getTime","setItem","actions","Signup","confirmDirty","password1","password2","handleConfirmBlur","e","compareToFirstPassword","rule","callback","form","getFieldValue","validateToNextPassword","validateFields","force","BaseRouter","exact","path","component","TextNoteDetailView","Header","Layout","Content","withRouter","zIndex","className","theme","mode","onClick","padding","marginTop","margin","minHeight","children","defaults","xsrfHeaderName","App","isAuthenticated","onTryAutosignup","undefined","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","authStart","action","replace","authLogout","reload","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ef6dede5.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n      {localStorage['token'] ?\r\n      <div>\r\n      <h1> welcome {localStorage['username']} </h1>\r\n      <p>greynotes is a note taking web app </p>\r\n      <p> you can create notes in the form of text and checklists </p>\r\n      </div>\r\n      :\r\n      <div>\r\n      <h1>Log in or sign up</h1>\r\n      <p>greynotes is a note taking web app </p>\r\n      <p> you can create notes in the form of text and checklists </p>\r\n      </div>\r\n      }\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","export const LOCAL_PATH = 'http://127.0.0.1:8000/';\r\nexport const WEB_PATH = 'https://albud187.pythonanywhere.com/';\r\n\r\nexport const API_PATH = WEB_PATH;\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { Form } from 'antd';\r\nimport axios from 'axios';\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nclass MemeTextGen extends Component {\r\n  state ={\r\n    memed_text: {}\r\n\r\n  }\r\n\r\n\r\n  HandleMemeGenSubmit = (event)=>{\r\n    event.preventDefault()\r\n    const textToMeme = event.target.elements.textToMeme.value;\r\n    console.log(textToMeme);\r\n    axios.get(API_PATH+'api/meme_text'+\r\n    '?textToMeme='+textToMeme, {\r\n      textToMeme: textToMeme\r\n    })\r\n    .then(res => {\r\n    this.setState({\r\n      memed_text: res.data.complex_result\r\n    });\r\n    console.log(\"result is \" + this.state.memed_text)\r\n  });\r\n  }\r\n\r\nrender(){\r\n  return (\r\n      <div>\r\n      {\r\n        this.state.memed_text ?\r\n        (<Form.Item label=\"output\">\r\n            <textarea rows=\"9\" cols=\"50\" name=\"output\" value={this.state.memed_text} />\r\n        </Form.Item>) :\r\n        <Form.Item label=\"output\">\r\n\r\n            <textarea rows=\"9\" cols=\"50\" name=\"output\" placeholder=\"output text\" />\r\n        </Form.Item>\r\n      }\r\n        <form onSubmit={(event)=>this.HandleMemeGenSubmit(event,\r\n        )}>\r\n\r\n\r\n\r\n          <Form.Item label=\"input\">\r\n              <textarea rows=\"9\" cols=\"50\" name=\"textToMeme\" placeholder=\"TEXT TO MEMEMIFY\" />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <button type=\"submit\">Submit</button>\r\n          </Form.Item>\r\n        </form>\r\n\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MemeTextGen\r\n","import React from 'react'\r\nimport { Checkbox, Button } from 'antd';\r\nimport axios from 'axios'\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nfunction TrueorFalse(input) {\r\n  if (input = false){\r\n    return(0)\r\n  }\r\n  if (input = true){\r\n    return(1)\r\n  }\r\n\r\n}\r\n\r\nclass ArchiveTextNoteCheckbox extends React.Component {\r\n\r\n  state = {\r\n    checked: this.props.data.archived,\r\n\r\n  };\r\n\r\n  onCheck = (event,noteID) =>{\r\n    event.preventDefault()\r\n    axios.put(`${API_PATH}api/TextNotes/${noteID}/`,{\r\n      archived: event.target.checked,\r\n      author: this.props.data.author,\r\n      title: this.props.data.title,\r\n      content: this.props.data.content\r\n    })\r\n    this.setState({\r\n      checked: event.target.checked,\r\n    });\r\n    console.log(event.target.checked)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <p style={{ marginBottom: '20px' }}>\r\n          <Checkbox\r\n            checked={this.state.checked}\r\n            onChange={(event,noteID)=>this.onCheck(event,this.props.data.id)}\r\n          >\r\n          </Checkbox>\r\n        </p>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArchiveTextNoteCheckbox\r\n","import React from 'react';\r\n\r\nimport { List } from 'antd';\r\nimport { Card } from 'antd';\r\nimport axios from 'axios'\r\nimport ArchiveTextNoteCheckbox from '../forms/ArchiveTextNoteCheckbox.js'\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nconst TextNotes =(props)=>{\r\n  var ItemInfo ='blank'\r\n  const ChangeStatus = (event,itemid) =>{\r\n  event.preventDefault()\r\n    console.log('test')\r\n    axios.get(`${API_PATH}api/TextNotes/${itemid}/`)\r\n      .then(res=>{ItemInfo=res.data})\r\n      console.log(ItemInfo)\r\n  }\r\n  return(\r\n\r\n  <List\r\n    grid={{ gutter: 16, column: 4}}\r\n\r\n    dataSource={props.data}\r\n\r\n    renderItem={item => (\r\n      <List.Item key={item.id}>\r\n      <Card>\r\n        <List.Item.Meta\r\n          title={<a href={\"/text_note/\"+`${item.id}`}>\r\n          {item.id} - {item.title}\r\n          </a>}/>\r\n\r\n        <p><strong>date created</strong> : {item.date_created}</p>\r\n        <p><strong>group</strong>: {item.note_group_name}</p>\r\n        <ArchiveTextNoteCheckbox\r\n        data={item}/>\r\n        Archive\r\n\r\n        </Card>\r\n      </List.Item>\r\n    )}\r\n  />\r\n  )\r\n}\r\n\r\nexport default TextNotes\r\n","import React from 'react'\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport { Checkbox } from 'antd';\r\n\r\nimport TextNotes from '../components/TextNotes.js'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nfunction checkArchived(entry){\r\n  return(!entry['archived'])\r\n}\r\n\r\nclass TextNoteListView extends React.Component{\r\n\r\n  state ={\r\n    active_text_notes: [],\r\n    all_text_notes:[],\r\n    text_archive_display:false,\r\n\r\n  }\r\n\r\n  fetchAllTextNotes = () => {\r\n    axios.get(`${API_PATH}api/text_notes_by_user/?token=${localStorage['token']}`).then(res => {\r\n      this.setState({\r\n        all_text_notes: res.data\r\n      });\r\n      console.log(res.data)\r\n    });\r\n  }\r\n\r\n  fetchActiveTextNotes = () => {\r\n    axios.get(`${API_PATH}api/text_notes_by_user/?token=${localStorage['token']}`).then(res => {\r\n      this.setState({\r\n        active_text_notes: res.data.filter(checkArchived)\r\n      });\r\n      console.log(res.data)\r\n    });\r\n  }\r\n\r\n  changeTextArchiveDisplay = (event) => {\r\n    const status = this.state.text_archive_display\r\n    this.setState({\r\n      text_archive_display: !status\r\n    })\r\n    console.log(status)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchAllTextNotes();\r\n    this.fetchActiveTextNotes();\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n      <h1>My Text Notes</h1>\r\n        <h1>\r\n\r\n          <Checkbox\r\n          checked={this.state.text_archive_display}\r\n          onChange = {(event)=>this.changeTextArchiveDisplay(event)}\r\n          >\r\n          Display Archived Text Notes\r\n\r\n          </Checkbox>\r\n        </h1>\r\n\r\n      <h2><Link to=\"/create_note\">New Text Note</Link></h2>\r\n\r\n      {this.state.text_archive_display ?\r\n        <TextNotes data ={this.state.all_text_notes}/>\r\n        :\r\n        <TextNotes data ={this.state.active_text_notes}/>\r\n      }\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.token\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps) (TextNoteListView)\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nclass TextNoteCreate extends React.Component {\r\n  state ={\r\n    note_groups: [],\r\n    userid:''\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n    axios.get(`${API_PATH}api/notegroups_by_user?token=${localStorage['token']}`).then(result => {\r\n      this.setState({\r\n        note_groups: result.data\r\n      });\r\n      console.log(result.data)\r\n    });\r\n  }\r\n\r\n  fetchUserId = () => {\r\n    axios.get(`${API_PATH}api/Tokens/${localStorage['token']}/`).then(result=>{\r\n      this.setState({\r\n        userid:result.data.user\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUserId();\r\n    this.fetchNoteGroups();\r\n  }\r\n\r\n  handleFormSubmit = (event)=>{\r\n    event.preventDefault()\r\n    const title = event.target.elements.title.value;\r\n    const content = event.target.elements.content.value;\r\n    const notegroup = event.target.elements.notegroup.value\r\n    console.log(title,content);\r\n    axios.post(`${API_PATH}api/TextNotes/`, {\r\n      title: title,\r\n      content: content,\r\n      note_group: notegroup,\r\n      author: this.state.userid\r\n    })\r\n      .then(res=>console.log(res))\r\n      .catch(err=>console.log(err));\r\n      this.props.history.push('text_note_list')\r\n\r\n\r\n  }\r\n\r\nrender(){\r\n  return (\r\n      <div>\r\n      <h1>New Text Note</h1>\r\n        <form onSubmit={(event)=>this.handleFormSubmit(event)}>\r\n          <p><strong>Title</strong></p>\r\n              <textarea rows=\"1\" cols=\"50\" name=\"title\" placeholder=\"title\"/>\r\n          <p><strong>Content</strong></p>\r\n              <textarea rows=\"9\" cols=\"50\" name=\"content\" placeholder=\"content\" />\r\n              <br></br>\r\n          <label for=\"notegroup\"><strong>Note Group: </strong></label>\r\n            <select name=\"notegroup\" id=\"notegroup\">\r\n            <option value=\"\">_ungrouped_</option>\r\n            {this.state.note_groups.map((val)=>(\r\n              <option value={val.id}>{val.group_name}</option>\r\n            ))}\r\n\r\n            </select>\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <button type=\"submit\">Submit</button>\r\n\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TextNoteCreate;\r\n","import React from 'react';\r\nimport { Input } from 'antd';\r\nimport axios from 'axios';\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nclass TextNoteDetailUpdate extends React.Component {\r\n  state ={\r\n    note_groups: [],\r\n    textnote: {},\r\n    userid:''\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n    axios.get(`${API_PATH}api/notegroups_by_user?token=${localStorage['token']}`)\r\n    .then(result => {this.setState({\r\n        note_groups: result.data\r\n      });\r\n      console.log(result.data)\r\n    });\r\n  }\r\n\r\n  fetchUserId = () => {\r\n    axios.get(`${API_PATH}api/Tokens/${localStorage['token']}/`).then(result=>{\r\n      this.setState({\r\n        userid:result.data.user\r\n      })\r\n    })\r\n  }\r\n\r\n  handleFormSubmit = (event, textnoteID)=>{\r\n    event.preventDefault()\r\n    const title = event.target.elements.title.value;\r\n    const content = event.target.elements.content.value;\r\n    const notegroup = event.target.elements.notegroup.value\r\n\r\n    console.log(title,content);\r\n    axios.put(`${API_PATH}api/TextNotes/${textnoteID}/`, {\r\n        author: this.state.userid,\r\n        title: title,\r\n        content: content,\r\n        note_group: notegroup\r\n      })\r\n      .then(res=>console.log(res))\r\n      .catch(err=>console.log(err));\r\n      alert('note updated')\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.fetchUserId()\r\n      this.fetchNoteGroups();\r\n        const textnoteID = this.props.textnoteID;\r\n        axios.get(`${API_PATH}api/TextNotes/${textnoteID}/`).then(res => {\r\n          this.setState({\r\n            textnote: res.data\r\n          });\r\n          console.log(\"component did mount \"+this.state.textnote.title)\r\n        });\r\n      }\r\n\r\nrender(){\r\n  return (\r\n      <div>\r\n        <form onSubmit={(event, textnoteID)=>this.handleFormSubmit(event, this.props.textnoteID)}>\r\n          <p><strong>Title</strong></p>\r\n              <textarea rows=\"1\" cols=\"80\" name=\"title\" defaultValue = {this.props.textnoteTitle}/>\r\n          <p><strong>Content</strong></p>\r\n              <textarea rows=\"9\" cols=\"80\" name=\"content\" defaultValue={this.state.textnote.content} />\r\n                <br/>\r\n          <label for=\"notegroup\"><strong>NoteGroup: </strong></label>\r\n\r\n\r\n              <select name=\"notegroup\" id=\"notegroup\">\r\n                <option value=\"\">_ungrouped_</option>\r\n                {this.state.note_groups.map((val)=>(\r\n                  val.id == this.state.textnote.note_group ? (\r\n                    <option value={val.id} selected >{val.group_name}</option>\r\n                  ):\r\n                  <option value={val.id}>{val.group_name}</option>\r\n                ))}\r\n              </select>\r\n            <br/>\r\n            <br/>\r\n            <button type=\"submit\">Update</button>\r\n        </form>\r\n        <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextNoteDetailUpdate;\r\n","import React from 'react'\r\nimport axios from 'axios';\r\nimport {Button} from 'antd'\r\nimport TextNoteDetailUpdate from '../forms/TextNoteDetailUpdate.js'\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nclass TextNoteDetail extends React.Component{\r\n\r\n  state ={\r\n    textnote: {},\r\n    userid:''\r\n  }\r\n\r\n  fetchUserId = () => {\r\n    axios.get(`${API_PATH}api/Tokens/${localStorage['token']}/`).then(result=>{\r\n      this.setState({\r\n        userid:result.data.user\r\n      })\r\n      console.log(this.state.userid)\r\n    })\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.fetchUserId();\r\n      const textnoteID = this.props.match.params.textnoteID;\r\n      axios.get(`${API_PATH}api/TextNotes/${textnoteID}/`)\r\n        .then(res => {\r\n        this.setState({\r\n          textnote: res.data\r\n        });\r\n        console.log(this.state.textnote.title)\r\n      });\r\n      console.log('test')\r\n    }\r\n\r\n\r\n    handleDelete = (event) => {\r\n      event.preventDefault()\r\n      const textnoteID = this.props.match.params.textnoteID;\r\n      axios.delete(`${API_PATH}api/TextNotes/${textnoteID}/`)\r\n        this.forceUpdate();\r\n        this.props.history.push('/text_note_list');\r\n        this.forceUpdate();\r\n    }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n\r\n      {this.state.textnote.author == this.state.userid?\r\n      <TextNoteDetailUpdate\r\n        requestType=\"put\"\r\n        textnoteID={this.props.match.params.textnoteID}\r\n        textnoteContent={this.state.textnote.content}\r\n        textnoteTitle = {this.state.textnote.title}/>\r\n      :\r\n      <h1> You are not logged in as the correct user</h1>\r\n\r\n    }\r\n\r\n    {this.state.textnote.author == this.state.userid ?\r\n\r\n    <form onSubmit={(event)=>this.handleDelete(event)}>\r\n      <Button type='danger' htmlType='submit'>Delete</Button>\r\n    </form>\r\n    :\r\n    <h1> </h1>\r\n    }\r\n\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default TextNoteDetail\r\n","import React from 'react'\r\nimport { Checkbox, Button } from 'antd';\r\nimport axios from 'axios'\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nfunction TrueorFalse(input) {\r\n  if (input = false){\r\n    return(0)\r\n  }\r\n  if (input = true){\r\n    return(1)\r\n  }\r\n\r\n}\r\n\r\nclass ArchiveListNoteCheckbox extends React.Component {\r\n\r\n  state = {\r\n    checked: this.props.data.archived,\r\n\r\n  };\r\n\r\n  onCheck = (event,noteID) =>{\r\n    event.preventDefault()\r\n    axios.put(`${API_PATH}api/ListNotes/${noteID}/`,{\r\n      archived: event.target.checked,\r\n      author: this.props.data.author,\r\n      title: this.props.data.title\r\n    })\r\n    this.setState({\r\n      checked: event.target.checked,\r\n    });\r\n    console.log(event.target.checked)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <p style={{ marginBottom: '20px' }}>\r\n          <Checkbox\r\n            checked={this.state.checked}\r\n            onChange={(event,noteID)=>this.onCheck(event,this.props.data.id)}\r\n          >\r\n          </Checkbox>\r\n        </p>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArchiveListNoteCheckbox\r\n","import React from 'react';\r\n\r\nimport { List} from 'antd';\r\nimport { Card } from 'antd';\r\n\r\nimport ArchiveListNoteCheckbox from '../forms/ArchiveListNoteCheckbox.js'\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nconst ListNotes =(props)=>{\r\n\r\n  return(\r\n\r\n  <List\r\n    grid={{ gutter: 16, column: 4}}\r\n\r\n    dataSource={props.data}\r\n\r\n    renderItem={item => (\r\n      <List.Item key={item.id}>\r\n      <Card>\r\n        <List.Item.Meta\r\n          title={<a href={\"/list_note/\"+`${item.id}`}>\r\n          {item.id} - {item.title}\r\n          </a>}/>\r\n\r\n        <p><strong>date created</strong> : {item.date_created}</p>\r\n        <p><strong>group</strong>: {item.note_group_name}</p>\r\n        <ArchiveListNoteCheckbox\r\n        data={item}/>\r\n        Archive\r\n\r\n        </Card>\r\n      </List.Item>\r\n    )}\r\n  />\r\n  )\r\n}\r\n\r\nexport default ListNotes\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nclass NoteGroupCreate extends Component {\r\n\r\n  state ={\r\n    userid:''\r\n  }\r\n\r\n  handleFormSubmit = (event)=>{\r\n    const notegroup = event.target.elements.notegroup.value\r\n    axios.post(`${API_PATH}api/NoteGroups/`,{\r\n      group_name:notegroup,\r\n      author:this.state.userid\r\n    })\r\n  }\r\n\r\n  fetchUserId = () => {\r\n    axios.get(`${API_PATH}api/Tokens/${localStorage['token']}/`).then(result=>{\r\n      this.setState({\r\n        userid:result.data.user\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUserId();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n      <form onSubmit ={(event)=>this.handleFormSubmit(event)}>\r\n        <textarea rows=\"1\" cols=\"50\" name=\"notegroup\" placeholder=\"New Note Group\"/>\r\n        <button type='submit'>add new group</button>\r\n      </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NoteGroupCreate\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nclass NoteGroupDelete extends Component {\r\n\r\n  state ={\r\n    note_groups:[]\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n  axios.get(`${API_PATH}api/notegroups_by_user?token=${localStorage['token']}`).then(result => {\r\n    this.setState({\r\n      note_groups: result.data\r\n    });\r\n    console.log(result.data)\r\n  });\r\n}\r\n\r\ncomponentDidMount() {\r\n    this.fetchNoteGroups();\r\n  }\r\n\r\n  handleDelete=(event) => {\r\n    event.preventDefault()\r\n    const notegroup = event.target.elements.notegroup.value\r\n    axios.delete(`${API_PATH}api/NoteGroups/${notegroup}/`)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n      <form onSubmit ={(event)=>this.handleDelete(event)}>\r\n      <label for=\"notegroup\">Delete </label>\r\n        <select name=\"notegroup\" id=\"notegroup\">\r\n        {this.state.note_groups.map((val)=>(\r\n          <option value={val.id}>{val.group_name}</option>\r\n        ))}\r\n\r\n        </select>\r\n\r\n        <button type=\"submit\">Delete</button>\r\n\r\n        </form>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default NoteGroupDelete\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nclass NoteGroupEdit extends Component {\r\n\r\n  state ={\r\n    note_groups:[],\r\n    userid:''\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n  axios.get(`${API_PATH}api/notegroups_by_user?token=${localStorage['token']}`).then(result => {\r\n    this.setState({\r\n      note_groups: result.data\r\n    });\r\n    console.log(result.data)\r\n  });\r\n}\r\n\r\nfetchUserId = () => {\r\n  axios.get(`${API_PATH}api/Tokens/${localStorage['token']}/`).then(result=>{\r\n    this.setState({\r\n      userid:result.data.user\r\n    })\r\n  })\r\n}\r\ncomponentDidMount() {\r\n    this.fetchUserId()\r\n    this.fetchNoteGroups();\r\n  }\r\n\r\n  handleGroupRename =(event)=>{\r\n    const notegroup = event.target.elements.notegroup.value;\r\n    const newgroupname = event.target.elements.newgroupname.value;\r\n    axios.put(`${API_PATH}api/NoteGroups/${notegroup}/`,{\r\n      group_name:newgroupname,\r\n      author: this.state.userid\r\n\r\n\r\n    })\r\n    .then(res=>console.log(res))\r\n    .catch(err=>console.log(err));\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n      <form onSubmit ={(event)=>this.handleGroupRename(event)}>\r\n      <label for=\"notegroup\">Rename </label>\r\n        <select name=\"notegroup\" id=\"notegroup\">\r\n        {this.state.note_groups.map((val)=>(\r\n          <option value={val.id}>{val.group_name}</option>\r\n        ))}\r\n\r\n        </select>\r\n\r\n        <textarea rows=\"1\" cols=\"50\" name=\"newgroupname\"/>\r\n\r\n        <button type=\"submit\">Rename</button>\r\n\r\n        </form>\r\n        </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default NoteGroupEdit\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport TextNotes from './TextNotes.js'\r\nimport ListNotes from './ListNotes.js'\r\nimport NoteGroupCreate from '../forms/NoteGroupCreate.js'\r\nimport NoteGroupDelete from '../forms/NoteGroupDelete.js'\r\nimport NoteGroupEdit from '../forms/NoteGroupEdit.js'\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nclass FilterTextNotes extends Component {\r\n\r\n  state ={\r\n    note_groups: [],\r\n    filtered_notes: [],\r\n    filtered_lists: [],\r\n    userid:''\r\n\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n    axios.get(`${API_PATH}api/notegroups_by_user?token=${localStorage['token']}`).then(result => {\r\n      this.setState({\r\n        note_groups: result.data\r\n      });\r\n      console.log(result.data)\r\n    });\r\n  }\r\n\r\n  fetchUserId = () => {\r\n    axios.get(`${API_PATH}api/Tokens/${localStorage['token']}/`).then(result=>{\r\n      this.setState({\r\n        userid:result.data.user\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUserId();\r\n    this.fetchNoteGroups();\r\n  }\r\n\r\n  HandleTextNoteFilterSubmit = (event)=>{\r\n    event.preventDefault()\r\n    const groupname = event.target.elements.notegroup.value;\r\n    console.log(groupname);\r\n\r\n    axios.get(API_PATH+'api/query_list_notes'+\r\n    '?groupname='+groupname +'&userid='+this.state.userid, {\r\n      groupname: groupname\r\n    })\r\n    .then(res => {\r\n    this.setState({\r\n      filtered_lists: res.data\r\n    });\r\n    console.log(\"result is \" + this.state.filtered_lists)\r\n  });\r\n\r\n    axios.get(API_PATH+'api/query_text_notes'+\r\n    '?groupname='+groupname+'&userid='+this.state.userid, {\r\n      groupname: groupname\r\n    })\r\n    .then(res => {\r\n    this.setState({\r\n      filtered_notes: res.data\r\n    });\r\n    console.log(\"result is \" + this.state.filtered_notes)\r\n  });\r\n  }\r\n\r\nrender(){\r\n  return (\r\n      <div>\r\n      <NoteGroupCreate />\r\n      <NoteGroupDelete />\r\n      <NoteGroupEdit />\r\n    <form  onSubmit={(event)=>this.HandleTextNoteFilterSubmit(event)}>\r\n    <label htmlFor=\"notegroup\">Filter </label>\r\n      <select name=\"notegroup\" id=\"notegroup\">\r\n      <option value=\"\">ALL</option>\r\n      {this.state.note_groups.map((val)=>(\r\n        <option value={val.group_name}>{val.group_name}</option>\r\n      ))}\r\n\r\n      </select>\r\n\r\n\r\n      <button type=\"submit\">Filter</button>\r\n      <h1> Text Notes <Link to=\"/create_note\">(New Text Note)</Link> </h1>\r\n      <TextNotes data ={this.state.filtered_notes}/>\r\n      <h1> List Notes <Link to=\"/create_list\">(New List Note)</Link> </h1>\r\n      <ListNotes data = {this.state.filtered_lists}/>\r\n      </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FilterTextNotes\r\n","import React from 'react'\r\nimport axios from 'axios';\r\nimport { Checkbox } from 'antd';\r\nimport {Link} from 'react-router-dom'\r\nimport ListNotes from '../components/ListNotes.js'\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nfunction checkArchived(entry){\r\n  return(!entry['archived'])\r\n}\r\n\r\nclass ListNoteListView extends React.Component{\r\n\r\n  state ={\r\n    all_list_notes: [],\r\n    active_list_notes:[],\r\n    list_archive_display:false,\r\n\r\n  }\r\n\r\n  fetchAllListNotes = () => {\r\n    axios.get(`${API_PATH}api/list_notes_by_user/?token=${localStorage['token']}`).then(res => {\r\n      this.setState({\r\n        all_list_notes: res.data\r\n      });\r\n      console.log(res.data)\r\n    });\r\n  }\r\n\r\n  fetchActiveListNotes = () => {\r\n    axios.get(`${API_PATH}api/list_notes_by_user/?token=${localStorage['token']}`).then(res => {\r\n      this.setState({\r\n        active_list_notes: res.data.filter(checkArchived)\r\n      });\r\n      console.log(res.data)\r\n    });\r\n  }\r\n\r\n  changeListArchiveDisplay = (event) => {\r\n    const status = this.state.list_archive_display\r\n    this.setState({\r\n      list_archive_display: !status\r\n    })\r\n    console.log(status)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchAllListNotes();\r\n    this.fetchActiveListNotes();\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n      <h1>My List Notes</h1>\r\n      <Checkbox\r\n      checked={this.state.list_archive_display}\r\n      onChange = {(event)=>this.changeListArchiveDisplay(event)}\r\n      >\r\n      Display Archived List Notes\r\n      </Checkbox>\r\n\r\n      <h2><Link to=\"/create_list\">New List Note</Link></h2>\r\n\r\n      {this.state.list_archive_display ?\r\n        <ListNotes data ={this.state.all_list_notes}/>\r\n        :\r\n        <ListNotes data ={this.state.active_list_notes}/>\r\n      }\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListNoteListView\r\n","import React from 'react'\r\nimport { Checkbox, Button } from 'antd';\r\nimport axios from 'axios'\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nfunction TrueorFalse(input) {\r\n  if (input = false){\r\n    return(0)\r\n  }\r\n  if (input = true){\r\n    return(1)\r\n  }\r\n\r\n}\r\n\r\nclass ListNoteTaskCheckbox extends React.Component {\r\n\r\n  state = {\r\n    checked: this.props.data.completed,\r\n    testentry: this.props.data.entry_text\r\n\r\n  };\r\n\r\n  onCheck = (event,listentryID) =>{\r\n    event.preventDefault()\r\n    axios.put(`${API_PATH}api/ListNoteEntrysAll/${listentryID}/`,{\r\n      parent_list: this.props.data.parent_list,\r\n      completed: event.target.checked,\r\n      author:this.props.data.author\r\n\r\n    })\r\n    this.setState({\r\n      checked: event.target.checked,\r\n    });\r\n    console.log(event.target.checked)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n\r\n        <p style={{ marginBottom: '20px' }}>\r\n          <Checkbox\r\n            checked={this.state.checked}\r\n            onChange={(event,listentryID)=>this.onCheck(event,this.props.data.id)}\r\n          >\r\n          </Checkbox>\r\n        </p>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListNoteTaskCheckbox\r\n","import React from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport axios from 'axios';\r\nimport { List,Card } from 'antd';\r\nimport { Checkbox } from 'antd';\r\nimport { Row, Col } from 'antd';\r\nimport ListNoteTaskCheckbox from './ListNoteTaskCheckbox.js'\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nconst textstyle = {\r\n  position: \"relative\",\r\n\r\n}\r\n\r\nconst updatestyle = {\r\n     position: \"relative\",\r\n     left: \"25px\",\r\n     bottom:\"10px\"\r\n\r\n   };\r\n\r\nconst delstyle ={\r\n  position: \"relative\",\r\n  left: \"25px\",\r\n  bottom:\"5px\"\r\n}\r\n\r\nconst rowstyle = {\r\n  marginBottom: '-4%'\r\n}\r\n\r\nclass ListNoteDetailUpdateView extends React.Component {\r\n\r\n  state ={\r\n    note_groups: [],\r\n    list_note: {},\r\n    list_note_entrys: [],\r\n    list_note_actual:{},\r\n    userid:''\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n    axios.get(`${API_PATH}api/notegroups_by_user?token=${localStorage['token']}`)\r\n    .then(result => {this.setState({\r\n        note_groups: result.data\r\n      });\r\n      console.log(result.data)\r\n    });\r\n  }\r\n\r\n  fetchUserId = () => {\r\n    axios.get(`${API_PATH}api/Tokens/${localStorage['token']}/`).then(result=>{\r\n      this.setState({\r\n        userid:result.data.user\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  handleListItemEdit =(event,itemID,parentlist)=>{\r\n    event.preventDefault()\r\n    const listentry = event.target.elements.listentry.value;\r\n    console.log(listentry, parentlist)\r\n    axios.put(`${API_PATH}api/ListNoteEntrysAll/${itemID}/`,{\r\n      entry_text:listentry,\r\n      parent_list:parentlist,\r\n      author:this.state.userid\r\n\r\n    })\r\n    .then(res=>console.log(res))\r\n    .catch(err=>console.log(err));\r\n\r\n  }\r\n\r\n  handleAddEntry = (event,parentlist) =>{\r\n    event.preventDefault()\r\n    const newlistentry = event.target.elements.newlistentry.value;\r\n    axios.post(`${API_PATH}api/ListNoteEntrysAll/`,{\r\n      entry_text:newlistentry,\r\n      parent_list:parentlist,\r\n      author:this.state.userid\r\n    })\r\n\r\n    axios.get(`${API_PATH}api/ListNoteEntrysList/?parentlist=${parentlist}`)\r\n    .then(result =>{this.setState({\r\n      list_note_entrys: result.data,\r\n      list_note:this.props.listnotetID\r\n    });\r\n    })\r\n\r\n    axios.get(`${API_PATH}api/ListNoteEntrysList/?parentlist=${parentlist}`)\r\n    .then(result =>{this.setState({\r\n      list_note_entrys: result.data,\r\n      list_note:this.props.listnotetID\r\n    });\r\n    })\r\n  }\r\n\r\n  handleEntryDelete = (event,listentryID,parentlist) =>{\r\n    event.preventDefault()\r\n    axios.delete(`${API_PATH}api/ListNoteEntrysAll/${listentryID}/`)\r\n\r\n      axios.get(`${API_PATH}api/ListNoteEntrysList/?parentlist=${parentlist}`)\r\n      .then(result =>{this.setState({\r\n        list_note_entrys: result.data,\r\n        list_note:this.props.listnotetID\r\n      });\r\n      })\r\n\r\n      axios.get(`${API_PATH}api/ListNoteEntrysList/?parentlist=${parentlist}`)\r\n      .then(result =>{this.setState({\r\n        list_note_entrys: result.data,\r\n        list_note:this.props.listnotetID\r\n      });\r\n      })\r\n\r\n      axios.get(`${API_PATH}api/ListNoteEntrysList/?parentlist=${parentlist}`)\r\n      .then(result =>{this.setState({\r\n        list_note_entrys: result.data,\r\n        list_note:this.props.listnotetID\r\n      });\r\n      })\r\n\r\n  }\r\n\r\n  handleTitleAndGroup = (event) =>{\r\n    event.preventDefault()\r\n    const title = event.target.elements.title.value;\r\n    const notegroup = event.target.elements.notegroup.value\r\n    axios.put(`${API_PATH}api/ListNotes/${this.props.listnotetID}/`, {\r\n    title: title,\r\n    note_group: notegroup,\r\n    author:this.state.userid\r\n  })\r\n  .then(res=>console.log(res))\r\n  .catch(err=>console.log(err));\r\n  alert('note updated')\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.fetchUserId()\r\n    this.fetchNoteGroups();\r\n    const listnotetID = this.props.listnotetID\r\n    axios.get(`${API_PATH}api/ListNoteEntrysList/?parentlist=${listnotetID}`)\r\n    .then(result => {this.setState({\r\n        list_note_entrys: result.data,\r\n        list_note:this.props.listnotetID\r\n        });\r\n  })\r\n    axios.get(`${API_PATH}api/ListNotes/${this.props.listnotetID}/`)\r\n      .then(result =>{this.setState({\r\n        list_note_actual:result.data\r\n      })})\r\n\r\n  }\r\n\r\n    render(){\r\n        return(\r\n      <div>\r\n\r\n      <form onSubmit={(event)=>this.handleTitleAndGroup(event)}>\r\n      <p><strong>Title</strong></p>\r\n        <textarea rows=\"1\" cols=\"50\" name=\"title\" defaultValue = {this.props.listnotetitle}/>\r\n\r\n      <select name=\"notegroup\" id=\"notegroup\">\r\n            <option value=\"\">_ungrouped_</option>\r\n            {this.state.note_groups.map((val)=>(\r\n              val.id == this.state.list_note_actual.note_group ? (\r\n                <option value={val.id} selected >{val.group_name}</option>\r\n              ):\r\n              <option value={val.id}>{val.group_name}</option>\r\n            ))}\r\n      </select>\r\n      <button type=\"submit\">Update</button>\r\n      </form>\r\n        <p><strong>New List Note Item</strong></p>\r\n\r\n      <form onSubmit={(event,parentlist)=>this.handleAddEntry(event,this.state.list_note)}>\r\n      <textarea rows=\"1\" cols=\"50\" name=\"newlistentry\" placeholder='new list item'/>\r\n      <button type=\"submit\">*ADD*</button>\r\n      </form>\r\n        <p><strong>List Note Items</strong></p>\r\n\r\n      <Row>\r\n        <Col span={120}>\r\n\r\n        <List\r\n          dataSource={this.state.list_note_entrys}\r\n          bordered\r\n          renderItem={item => (\r\n            <Row style ={rowstyle}>\r\n              <List.Item key={item.id}>\r\n              <Col span ={1}>\r\n              <ListNoteTaskCheckbox data={item} style={{ position: 'relative', xIndex: 2, width: '10%' }}></ListNoteTaskCheckbox>\r\n              </Col>\r\n\r\n              <Col span ={20}>\r\n\r\n                <form\r\n                onSubmit={(event,itemID,parentlist)=>this.handleListItemEdit(event,item.id,item.parent_list)}\r\n                >\r\n                <tr>\r\n                <th>\r\n                  <div style={textstyle}>\r\n                    <textarea rows=\"1\" cols=\"60\" name=\"listentry\" defaultValue = {item.entry_text}/>\r\n                  </div>\r\n                </th>\r\n                <th>\r\n                  <div style={updatestyle}>\r\n                    <button type=\"submit\">*UPDATE*</button>\r\n                  </div>\r\n                </th>\r\n                </tr>\r\n                </form>\r\n\r\n              </Col>\r\n\r\n              <Col span={1}>\r\n              <div style={delstyle}>\r\n                <form\r\n                onSubmit = {(event,listentryID,parentlist)=>this.handleEntryDelete(event,item.id,item.parent_list)}>\r\n                  <button type=\"submit\">*DELETE*</button>\r\n                </form>\r\n              </div>\r\n              </Col>\r\n                </List.Item>\r\n              </Row>\r\n            )}\r\n            />\r\n            </Col>\r\n          </Row>\r\n          <br></br>\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListNoteDetailUpdateView\r\n","import React from 'react'\nimport axios from 'axios';\nimport {Button} from 'antd'\nimport ListNoteDetailUpdateView from '../forms/ListNoteDetailUpdateView.js'\n\nimport * as API_PATHS from '../api_path.js'\nconst API_PATH = API_PATHS.API_PATH\n\nclass ListNoteDetailView extends React.Component {\n  state ={\n    listnote: {},\n    userid:''\n}\n\nfetchUserId = () => {\n  axios.get(`${API_PATH}api/Tokens/${localStorage['token']}/`).then(result=>{\n    this.setState({\n      userid:result.data.user\n    })\n  })\n}\n  componentDidMount() {\n    this.fetchUserId()\n    const listnoteID = this.props.match.params.listnoteID;\n    axios.get(`${API_PATH}api/ListNotes/${listnoteID}/`)\n      .then(res => {\n      this.setState({\n        listnote: res.data\n      });\n      console.log(this.state.listnote.id +' - '+ this.state.listnote.title)\n    });\n  }\n\n  handleDelete = (event) => {\n      event.preventDefault()\n      const listnoteID = this.props.match.params.listnoteID;\n\n      axios.delete(`${API_PATH}api/ListNotes/${listnoteID}/`)\n        this.forceUpdate();\n        this.props.history.push('/list_note_list');\n        this.forceUpdate();\n    }\n\n  render() {\n    return (\n      <div>\n      {this.state.listnote.author == this.state.userid ?\n        <ListNoteDetailUpdateView\n        listnotetID={this.props.match.params.listnoteID}\n        listnotetitle = {this.state.listnote.title}\n        />\n        :\n        <h1>You are not logged in as the correct user</h1>\n      }\n\n      {this.state.listnote.author == this.state.userid ?\n        <form onSubmit={(event)=>this.handleDelete(event)}>\n          <Button type='danger' htmlType='submit'>Delete</Button>\n        </form>\n        :\n        <h1> </h1>\n      }\n\n      </div>\n\n\n    )\n  }\n}\n\nexport default ListNoteDetailView\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nclass ListNoteCreate extends React.Component {\r\n  state ={\r\n    note_groups: [],\r\n    userid:''\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n    axios.get(`${API_PATH}api/notegroups_by_user?token=\"${localStorage['token']}`).then(result => {\r\n      this.setState({\r\n        note_groups: result.data\r\n      });\r\n      console.log(result.data)\r\n    });\r\n  }\r\n\r\n  fetchUserId = () => {\r\n    axios.get(`${API_PATH}api/Tokens/${localStorage['token']}/`).then(result=>{\r\n      this.setState({\r\n        userid:result.data.user\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUserId();\r\n    this.fetchNoteGroups();\r\n  }\r\n\r\n  handleFormSubmit = (event)=>{\r\n  event.preventDefault()\r\n  const title = event.target.elements.title.value;\r\n  const notegroup = event.target.elements.notegroup.value\r\n  console.log(title);\r\n  axios.post(`${API_PATH}api/ListNotes/`, {\r\n    title: title,\r\n    note_group: notegroup,\r\n    author: this.state.userid\r\n  })\r\n    .then(res=>console.log(res))\r\n    .catch(err=>console.log(err));\r\n    console.log(title)\r\n    console.log(notegroup)\r\n    this.props.history.push('list_note_list')\r\n\r\n\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <h1>New List Note</h1>\r\n\r\n      <form onSubmit={(event)=>this.handleFormSubmit(event)}>\r\n      <p><strong>Title</strong></p>\r\n    <textarea rows=\"1\" cols=\"50\" name=\"title\" placeholder=\"title\"/>\r\n\r\n    <label for=\"notegroup\"><strong>Note Group: </strong></label>\r\n      <select name=\"notegroup\" id=\"notegroup\">\r\n      <option value=\"\">_ungrouped_</option>\r\n      {this.state.note_groups.map((val)=>(\r\n        <option value={val.id}>{val.group_name}</option>\r\n      ))}\r\n\r\n        </select>\r\n        <button type='submit'>submit</button>\r\n      </form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListNoteCreate\r\n","import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nimport * as API_PATHS from '../../api_path.js'\nconst API_PATH = API_PATHS.API_PATH\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = token => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('username');\n\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n     window.location.reload(false)\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n}\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(`${API_PATH}rest-auth/login/`, {\n            username: username,\n            email:\"\",\n            password: password\n        })\n\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            localStorage.setItem('username',username)\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n            console.log(token)\n\n            axios.get(`${API_PATH}api/Tokens/${token}/`)\n              .then(result =>{\n                const userid = result.data.user\n                localStorage.setItem('userid', userid);\n              })\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n\n        })\n    }\n}\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n\n        axios.post(`${API_PATH}rest-auth/registration/`, {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2,\n        })\n\n\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if ( expirationDate <= new Date() ) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000) );\n            }\n        }\n    }\n}\n","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import React from 'react'\r\nimport { Form, Input, Button, Spin } from 'antd';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as actions from '../store/actions/auth';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass Login extends React.Component {\r\n  handleSubmit = (event) => {\r\n    this.forceUpdate()\r\n    const username = event.target.elements.userName.value\r\n    const password = event.target.elements.pwd.value\r\n    this.props.onAuth(username, password);\r\n    this.props.history.push('/');\r\n    console.log('token is ' + localStorage.getItem('token'))\r\n    this.forceUpdate()\r\n    };\r\n\r\n\r\n\r\n  render() {\r\n    let errorMessage = null;\r\n    if (this.props.error) {\r\n        errorMessage = (\r\n            <p>{this.props.error.message}</p>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n        <form onSubmit={(event)=>this.handleSubmit(event)} class=\"loginform\">\r\n            <input name='userName' placeholder= \"username\"/>\r\n            <br/>\r\n            <input type=\"password\" name=\"pwd\" placeholder=\"password\" />\r\n            <br/>\r\n\r\n            <button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\r\n                Login\r\n            </button>\r\n\r\n          </form>\r\n          <br></br>\r\n          <p>Forgot password? <a href='/request-reset-email/'>reset it here</a></p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as actions from '../store/actions/auth';\r\nimport { Form, Input, Button, Spin} from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Signup extends React.Component {\r\n\r\n  state = {\r\n  confirmDirty: false,\r\n};\r\n\r\nhandleSubmit = (event) => {\r\n  event.preventDefault();\r\n  const username = event.target.elements.userName.value\r\n  const email = event.target.elements.email.value\r\n  const password1 = event.target.elements.password1.value\r\n  const password2 = event.target.elements.password2.value\r\n  this.props.onAuth(\r\n    username,\r\n    email,\r\n    password1,\r\n    password2\r\n  )\r\n  this.props.history.push('/');\r\n\r\n}\r\n\r\nhandleConfirmBlur = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  }\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n            <form onSubmit={(event)=>this.handleSubmit(event)} class=\"loginform\">\r\n                <input name='userName' placeholder= \"username\"/>\r\n                <br/>\r\n                <input name='email' placeholder= \"email\"/>\r\n                <br/>\r\n                <input type=\"password\" name=\"password1\" placeholder=\"password\" />\r\n                <br/>\r\n                <input type=\"password\" name=\"password2\" placeholder=\"password\" />\r\n                <br/>\r\n\r\n                <button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\r\n                    Signup\r\n                </button>\r\n\r\n              </form>\r\n          </div>    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport Home from './components/Home.js'\r\n\r\nimport MemeTextGen from './components/MemeTextGen.js'\r\n\r\nimport TextNoteListView from './containers/TextNoteListView.js'\r\nimport TextNoteCreate from './forms/TextNoteCreate.js'\r\nimport TextNoteDetailView from './containers/TextNoteDetailView.js'\r\nimport FilterTextNotes from './components/FilterTextNotes'\r\n\r\nimport ListNoteListView from './containers/ListNoteListView.js'\r\nimport ListNoteDetailView from './containers/ListNoteDetailView.js'\r\nimport ListNoteCreate from './forms/ListNoteCreate.js'\r\n\r\nimport Login from './containers/Login.js'\r\nimport Signup from './containers/Signup.js'\r\n\r\nconst BaseRouter =() => (\r\n  <div>\r\n    <Route exact path ='/' component ={Home} />\r\n\r\n    <Route exact path ='/create-article/' component ={TextNoteCreate} />\r\n    <Route exact path='/meme-text-gen/' component = {MemeTextGen} />\r\n\r\n    <Route exact path='/text_note_list' component = {TextNoteListView} />\r\n    <Route exact path='/filter_notes' component = {FilterTextNotes} />\r\n    <Route exact path='/create_note' component = {TextNoteCreate} />\r\n    <Route exact path='/text_note/:textnoteID' component = {TextNoteDetailView} />\r\n\r\n    <Route exact path='/list_note_list' component = {ListNoteListView} />\r\n    <Route exact path='/list_note/:listnoteID' component = {ListNoteDetailView} />\r\n    <Route exact path ='/create_list' component ={ListNoteCreate}/>\r\n\r\n    <Route exact path='/login/' component = {Login}/>\r\n  </div>\r\n)\r\n\r\n\r\n\r\nexport default BaseRouter\r\n","import React from 'react';\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../store/actions/auth';\r\n\r\nconst { Header, Content} = Layout;\r\n\r\nconst CustomLayout = (props)=>{\r\n\r\n  return(\r\n    <Layout>\r\n      <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n        <div className=\"logo\" />\r\n        <Menu theme=\"dark\" mode=\"horizontal\">\r\n        <Menu.Item><Link to='/'>Home</Link></Menu.Item>\r\n\r\n          {localStorage['token'] ?\r\n          <Menu.Item onClick = {props.logout} >Logout</Menu.Item>\r\n          :\r\n          <Menu.Item ><Link to='/login/'>Login</Link></Menu.Item>\r\n          }\r\n\r\n\r\n          {localStorage['token'] ?\r\n          <Menu.Item><strong>Welcome {localStorage['username']}</strong></Menu.Item>\r\n          :\r\n          <Menu.Item><a href='/registration/'>Register</a></Menu.Item>\r\n          }\r\n\r\n        </Menu>\r\n      </Header>\r\n      <Content className=\"site-layout\" style={{ padding: '0 50px', marginTop: 64 }}>\r\n  {localStorage['token'] ?\r\n        <Breadcrumb style={{ margin: '16px 0' }}>\r\n          <Breadcrumb.Item><Link to=\"/text_note_list\">Text Notes</Link></Breadcrumb.Item>\r\n          <Breadcrumb.Item><Link to=\"/list_note_list\">List Notes</Link></Breadcrumb.Item>\r\n          <Breadcrumb.Item><Link to=\"/filter_notes\">Note Groups</Link></Breadcrumb.Item>\r\n          <Breadcrumb.Item><Link to=\"/meme-text-gen/\">Meme Text Generator</Link></Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        :\r\n        <h1> </h1>\r\n      }\r\n        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 380 }}>\r\n          {props.children}\r\n        </div>\r\n      </Content>\r\n\r\n\r\n    </Layout>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(CustomLayout));\r\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {connect} from 'react-redux'\nimport BaseRouter from './routes';\nimport 'antd/dist/antd.css'\nimport CustomLayout from './containers/Layout.js'\nimport axios from 'axios'\n\nimport * as actions from './store/actions/auth.js'\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\"\nclass App extends Component {\n  render(){\n  return (\n      <div className=\"App\">\n\n      <Router>\n        <CustomLayout {...this.props}>\n          <BaseRouter/>\n        </CustomLayout>\n      </Router>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null,\n    token: state.token\n  }\n}\n\nconst mapDispatchToProps = dispatch =>{\n  return{\n    onTryAutosignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    token: null,\n    error: null,\n    loading: false,\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n}\n\nconst authSuccess = (state, action) => {\n  window.location.replace('/')\n    return updateObject(state, {\n        token: action.token,\n        error: null,\n        loading: false,\n    });\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n}\n\nconst authLogout = (state, action) => {\n    window.location.reload(true)\n    window.location.replace('/')\n    return updateObject(state, {\n        token: null\n    });\n\n}\n\nconst reducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\n\nimport reducer from './store/reducers/auth'\n\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhances(\n  applyMiddleware(thunk)\n))\n\nconst app = (\n  <Provider store = {store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}