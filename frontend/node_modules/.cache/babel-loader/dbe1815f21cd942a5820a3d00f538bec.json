{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import axios from'axios';var ListNoteCreate=/*#__PURE__*/function(_React$Component){_inherits(ListNoteCreate,_React$Component);var _super=_createSuper(ListNoteCreate);function ListNoteCreate(){var _this;_classCallCheck(this,ListNoteCreate);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={note_groups:[],userid:''};_this.fetchNoteGroups=function(){axios.get(\"http://127.0.0.1:8000/api/notegroups_by_user?token=\"+localStorage['token']).then(function(result){_this.setState({note_groups:result.data});console.log(result.data);});};_this.fetchUserId=function(){axios.get(\"http://127.0.0.1:8000/api/Tokens/\".concat(localStorage['token'],\"/\")).then(function(result){_this.setState({userid:result.data.user});});};_this.handleFormSubmit=function(event){event.preventDefault();var title=event.target.elements.title.value;var notegroup=event.target.elements.notegroup.value;console.log(title);axios.post('http://127.0.0.1:8000/api/ListNotes/',{title:title,note_group:notegroup,author:_this.state.userid}).then(function(res){return console.log(res);}).catch(function(err){return console.log(err);});console.log(title);console.log(notegroup);};return _this;}_createClass(ListNoteCreate,[{key:\"componentDidMount\",value:function componentDidMount(){this.fetchUserId();this.fetchNoteGroups();}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"ListNoteCreate.js\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:function onSubmit(event){return _this2.handleFormSubmit(event);}},/*#__PURE__*/React.createElement(\"p\",null,\"Title\"),/*#__PURE__*/React.createElement(\"textarea\",{rows:\"1\",cols:\"50\",name:\"title\",placeholder:\"title\"}),/*#__PURE__*/React.createElement(\"label\",{for:\"notegroup\"},\"NoteGroup: \"),/*#__PURE__*/React.createElement(\"select\",{name:\"notegroup\",id:\"notegroup\"},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"_ungrouped_\"),this.state.note_groups.map(function(val){return/*#__PURE__*/React.createElement(\"option\",{value:val.id},val.group_name);})),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"submit\")));}}]);return ListNoteCreate;}(React.Component);export default ListNoteCreate;","map":{"version":3,"sources":["C:/Users/alfab/Documents/_Projects/greynotes/frontend/src/forms/ListNoteCreate.js"],"names":["React","axios","ListNoteCreate","state","note_groups","userid","fetchNoteGroups","get","localStorage","then","result","setState","data","console","log","fetchUserId","user","handleFormSubmit","event","preventDefault","title","target","elements","value","notegroup","post","note_group","author","res","catch","err","map","val","id","group_name","Component"],"mappings":"4sBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,GAEMC,CAAAA,c,uWACJC,K,CAAO,CACLC,WAAW,CAAE,EADR,CAELC,MAAM,CAAC,EAFF,C,OAKPC,e,CAAkB,UAAM,CACtBL,KAAK,CAACM,GAAN,CAAU,sDAAsDC,YAAY,CAAC,OAAD,CAA5E,EAAuFC,IAAvF,CAA4F,SAAAC,MAAM,CAAI,CACpG,MAAKC,QAAL,CAAc,CACZP,WAAW,CAAEM,MAAM,CAACE,IADR,CAAd,EAGAC,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,IAAnB,EACD,CALD,EAMD,C,OAEDG,W,CAAc,UAAM,CAClBd,KAAK,CAACM,GAAN,4CAA8CC,YAAY,CAAC,OAAD,CAA1D,OAAwEC,IAAxE,CAA6E,SAAAC,MAAM,CAAE,CACnF,MAAKC,QAAL,CAAc,CACZN,MAAM,CAACK,MAAM,CAACE,IAAP,CAAYI,IADP,CAAd,EAGD,CAJD,EAKD,C,OAODC,gB,CAAmB,SAACC,KAAD,CAAS,CAC5BA,KAAK,CAACC,cAAN,GACA,GAAMC,CAAAA,KAAK,CAAGF,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBF,KAAtB,CAA4BG,KAA1C,CACA,GAAMC,CAAAA,SAAS,CAAGN,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBE,SAAtB,CAAgCD,KAAlD,CACAV,OAAO,CAACC,GAAR,CAAYM,KAAZ,EACAnB,KAAK,CAACwB,IAAN,CAAW,sCAAX,CAAmD,CACjDL,KAAK,CAAEA,KAD0C,CAEjDM,UAAU,CAAEF,SAFqC,CAGjDG,MAAM,CAAE,MAAKxB,KAAL,CAAWE,MAH8B,CAAnD,EAMGI,IANH,CAMQ,SAAAmB,GAAG,QAAEf,CAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ,CAAF,EANX,EAOGC,KAPH,CAOS,SAAAC,GAAG,QAAEjB,CAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ,CAAF,EAPZ,EAQEjB,OAAO,CAACC,GAAR,CAAYM,KAAZ,EACAP,OAAO,CAACC,GAAR,CAAYU,SAAZ,EAIH,C,uGAvBqB,CAClB,KAAKT,WAAL,GACA,KAAKT,eAAL,GACD,C,uCAsBQ,iBACP,mBACE,4CACA,kDADA,cAGA,4BAAM,QAAQ,CAAE,kBAACY,KAAD,QAAS,CAAA,MAAI,CAACD,gBAAL,CAAsBC,KAAtB,CAAT,EAAhB,eACA,qCADA,cAEF,gCAAU,IAAI,CAAC,GAAf,CAAmB,IAAI,CAAC,IAAxB,CAA6B,IAAI,CAAC,OAAlC,CAA0C,WAAW,CAAC,OAAtD,EAFE,cAIF,6BAAO,GAAG,CAAC,WAAX,gBAJE,cAKA,8BAAQ,IAAI,CAAC,WAAb,CAAyB,EAAE,CAAC,WAA5B,eACA,8BAAQ,KAAK,CAAC,EAAd,gBADA,CAEC,KAAKf,KAAL,CAAWC,WAAX,CAAuB2B,GAAvB,CAA2B,SAACC,GAAD,qBAC1B,8BAAQ,KAAK,CAAEA,GAAG,CAACC,EAAnB,EAAwBD,GAAG,CAACE,UAA5B,CAD0B,EAA3B,CAFD,CALA,cAYE,8BAAQ,IAAI,CAAC,QAAb,WAZF,CAHA,CADF,CAqBD,C,4BAtE0BlC,KAAK,CAACmC,S,EAyEnC,cAAejC,CAAAA,cAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass ListNoteCreate extends React.Component {\r\n  state ={\r\n    note_groups: [],\r\n    userid:''\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n    axios.get(\"http://127.0.0.1:8000/api/notegroups_by_user?token=\"+localStorage['token']).then(result => {\r\n      this.setState({\r\n        note_groups: result.data\r\n      });\r\n      console.log(result.data)\r\n    });\r\n  }\r\n\r\n  fetchUserId = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/Tokens/${localStorage['token']}/`).then(result=>{\r\n      this.setState({\r\n        userid:result.data.user\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUserId();\r\n    this.fetchNoteGroups();\r\n  }\r\n\r\n  handleFormSubmit = (event)=>{\r\n  event.preventDefault()\r\n  const title = event.target.elements.title.value;\r\n  const notegroup = event.target.elements.notegroup.value\r\n  console.log(title);\r\n  axios.post('http://127.0.0.1:8000/api/ListNotes/', {\r\n    title: title,\r\n    note_group: notegroup,\r\n    author: this.state.userid\r\n\r\n  })\r\n    .then(res=>console.log(res))\r\n    .catch(err=>console.log(err));\r\n    console.log(title)\r\n    console.log(notegroup)\r\n\r\n\r\n\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <h1>ListNoteCreate.js</h1>\r\n\r\n      <form onSubmit={(event)=>this.handleFormSubmit(event)}>\r\n      <p>Title</p>\r\n    <textarea rows=\"1\" cols=\"50\" name=\"title\" placeholder=\"title\"/>\r\n\r\n    <label for=\"notegroup\">NoteGroup: </label>\r\n      <select name=\"notegroup\" id=\"notegroup\">\r\n      <option value=\"\">_ungrouped_</option>\r\n      {this.state.note_groups.map((val)=>(\r\n        <option value={val.id}>{val.group_name}</option>\r\n      ))}\r\n\r\n        </select>\r\n        <button type='submit'>submit</button>\r\n      </form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListNoteCreate\r\n"]},"metadata":{},"sourceType":"module"}