{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport BaseRouter from './routes';\nimport 'antd/dist/antd.css';\nimport CustomLayout from './containers/Layout.js';\nimport axios from 'axios';\nimport * as actions from './store/actions/auth.js';\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CustomLayout, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BaseRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null,\n    token: state.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutosignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/alfab/Documents/_Projects/greynotes/frontend/src/App.js"],"names":["React","Component","BrowserRouter","Router","connect","BaseRouter","CustomLayout","axios","actions","defaults","xsrfHeaderName","App","render","props","mapStateToProps","state","isAuthenticated","token","mapDispatchToProps","dispatch","onTryAutosignup","authCheckState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,UAAvB;AACA,OAAO,oBAAP;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,yBAAzB;AACAD,KAAK,CAACE,QAAN,CAAeC,cAAf,GAAgC,aAAhC;;AACA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAC1BW,EAAAA,MAAM,GAAE;AACR,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD,oBAAkB,KAAKC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAFA,CADJ;AAUC;;AAZyB;;AAc5B,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,eAAe,EAAED,KAAK,CAACE,KAAN,KAAgB,IAD5B;AAELA,IAAAA,KAAK,EAAEF,KAAK,CAACE;AAFR,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAG;AACpC,SAAM;AACJC,IAAAA,eAAe,EAAE,MAAMD,QAAQ,CAACX,OAAO,CAACa,cAAR,EAAD;AAD3B,GAAN;AAGD,CAJD;;AAMA,eAAejB,OAAO,CAACU,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CP,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {connect} from 'react-redux'\nimport BaseRouter from './routes';\nimport 'antd/dist/antd.css'\nimport CustomLayout from './containers/Layout.js'\nimport axios from 'axios'\n\nimport * as actions from './store/actions/auth.js'\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\"\nclass App extends Component {\n  render(){\n  return (\n      <div className=\"App\">\n\n      <Router>\n        <CustomLayout {...this.props}>\n          <BaseRouter/>\n        </CustomLayout>\n      </Router>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null,\n    token: state.token\n  }\n}\n\nconst mapDispatchToProps = dispatch =>{\n  return{\n    onTryAutosignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}