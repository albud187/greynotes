{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\src\\\\containers\\\\Login.js\";\nimport React from 'react';\nimport { Form, Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\nimport { LoadingOutlined } from '@ant-design/icons';\nconst FormItem = Form.Item;\nconst antLoadingOutlined = /*#__PURE__*/React.createElement(LoadingOutlined, {\n  style: {\n    fontSize: 24\n  },\n  spin: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 29\n  }\n});\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          this.props.onAuth(values.userName, values.password);\n          this.props.history.push('/');\n        }\n      });\n      console.log('test');\n    };\n  }\n\n  render() {\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, this.props.error.message);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => this.handleSubmi(event),\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"userName\",\n      rows: \"1\",\n      cols: \"50\",\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }],\n      placeholder: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"password\",\n      rows: \"1\",\n      cols: \"50\",\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }],\n      placeholder: \"Password\",\n      type: \"password\",\n      class: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      class: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, \" \")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        marginRight: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"Login\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Users/alfab/Documents/_Projects/greynotes/frontend/src/containers/Login.js"],"names":["React","Form","Input","Button","Spin","connect","NavLink","actions","LoadingOutlined","FormItem","Item","antLoadingOutlined","fontSize","Login","Component","handleSubmit","event","preventDefault","props","form","validateFields","err","values","onAuth","userName","password","history","push","console","log","render","errorMessage","error","message","handleSubmi","required","marginRight","mapStateToProps","state","loading","mapDispatchToProps","dispatch","username","authLogin"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Form, Input, Button, Spin } from 'antd';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as actions from '../store/actions/auth';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst FormItem = Form.Item;\r\nconst antLoadingOutlined  = <LoadingOutlined style={{ fontSize: 24 }} spin />\r\n\r\nclass Login extends React.Component {\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.props.onAuth(values.userName, values.password);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n    console.log('test')\r\n  }\r\n\r\n  render() {\r\n    let errorMessage = null;\r\n    if (this.props.error) {\r\n        errorMessage = (\r\n            <p>{this.props.error.message}</p>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <form onSubmit={(event)=>this.handleSubmi(event)} className=\"login-form\">\r\n            <textarea name='userName' rows=\"1\" cols=\"50\" rules={[{ required: true, message: 'Please input your username!' }]} placeholder= \"username\">\r\n            </textarea>\r\n            <br/>\r\n            <textarea name=\"password\" rows=\"1\" cols=\"50\" rules={[{ required: true, message: 'Please input your Password!' }]}placeholder=\"Password\" type=\"password\" class=\"hidden\">\r\n            <input type=\"password\" class=\"hidden\"> </input>\r\n            </textarea>\r\n            <br/>\r\n\r\n            <button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\r\n                Login\r\n            </button>\r\n\r\n          </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n"]},"metadata":{},"sourceType":"module"}