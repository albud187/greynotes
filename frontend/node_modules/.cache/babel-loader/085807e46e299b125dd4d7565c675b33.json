{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import axios from'axios';import{Checkbox}from'antd';import{Link}from'react-router-dom';import ListNotes from'../components/ListNotes.js';function checkArchived(entry){return!entry['archived'];}var ListNoteListView=/*#__PURE__*/function(_React$Component){_inherits(ListNoteListView,_React$Component);var _super=_createSuper(ListNoteListView);function ListNoteListView(){var _this;_classCallCheck(this,ListNoteListView);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={all_list_notes:[],active_list_notes:[],list_archive_display:false};_this.fetchAllListNotes=function(){axios.get(\"http://127.0.0.1:8000/api/list_notes_by_user?token=\".concat(localStorage['token'])).then(function(res){_this.setState({all_list_notes:res.data});console.log(res.data);});};_this.fetchActiveListNotes=function(){axios.get(\"http://127.0.0.1:8000/api/list_notes_by_user?token=\".concat(localStorage['token'])).then(function(res){_this.setState({active_list_notes:res.data.filter(checkArchived)});console.log(res.data);});};_this.changeListArchiveDisplay=function(event){var status=_this.state.list_archive_display;_this.setState({list_archive_display:!status});console.log(status);};return _this;}_createClass(ListNoteListView,[{key:\"componentDidMount\",value:function componentDidMount(){this.fetchAllListNotes();this.fetchActiveListNotes();}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\" ListNoteListView.js\"),/*#__PURE__*/React.createElement(Checkbox,{checked:this.state.list_archive_display,onChange:function onChange(event){return _this2.changeListArchiveDisplay(event);}},\"Display Archived List Notes\"),/*#__PURE__*/React.createElement(\"h2\",null,/*#__PURE__*/React.createElement(Link,{to:\"/create_list\"},\"New List Note\")),this.state.list_archive_display?/*#__PURE__*/React.createElement(ListNotes,{data:this.state.all_list_notes}):/*#__PURE__*/React.createElement(ListNotes,{data:this.state.active_list_notes}));}}]);return ListNoteListView;}(React.Component);export default ListNoteListView;","map":{"version":3,"sources":["C:/Users/alfab/Documents/_Projects/greynotes/frontend/src/containers/ListNoteListView.js"],"names":["React","axios","Checkbox","Link","ListNotes","checkArchived","entry","ListNoteListView","state","all_list_notes","active_list_notes","list_archive_display","fetchAllListNotes","get","localStorage","then","res","setState","data","console","log","fetchActiveListNotes","filter","changeListArchiveDisplay","event","status","Component"],"mappings":"4sBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,MAAzB,CACA,OAAQC,IAAR,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,4BAAtB,CAEA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA6B,CAC3B,MAAO,CAACA,KAAK,CAAC,UAAD,CAAb,CACD,C,GAEKC,CAAAA,gB,+WAEJC,K,CAAO,CACLC,cAAc,CAAE,EADX,CAELC,iBAAiB,CAAC,EAFb,CAGLC,oBAAoB,CAAC,KAHhB,C,OAOPC,iB,CAAoB,UAAM,CACxBX,KAAK,CAACY,GAAN,8DAAgEC,YAAY,CAAC,OAAD,CAA5E,GAAyFC,IAAzF,CAA8F,SAAAC,GAAG,CAAI,CACnG,MAAKC,QAAL,CAAc,CACZR,cAAc,CAAEO,GAAG,CAACE,IADR,CAAd,EAGAC,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACE,IAAhB,EACD,CALD,EAMD,C,OAEDG,oB,CAAuB,UAAM,CAC3BpB,KAAK,CAACY,GAAN,8DAAgEC,YAAY,CAAC,OAAD,CAA5E,GAAyFC,IAAzF,CAA8F,SAAAC,GAAG,CAAI,CACnG,MAAKC,QAAL,CAAc,CACZP,iBAAiB,CAAEM,GAAG,CAACE,IAAJ,CAASI,MAAT,CAAgBjB,aAAhB,CADP,CAAd,EAGAc,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACE,IAAhB,EACD,CALD,EAMD,C,OAEDK,wB,CAA2B,SAACC,KAAD,CAAW,CACpC,GAAMC,CAAAA,MAAM,CAAG,MAAKjB,KAAL,CAAWG,oBAA1B,CACA,MAAKM,QAAL,CAAc,CACZN,oBAAoB,CAAE,CAACc,MADX,CAAd,EAGAN,OAAO,CAACC,GAAR,CAAYK,MAAZ,EACD,C,yGAEmB,CAClB,KAAKb,iBAAL,GACA,KAAKS,oBAAL,GACD,C,uCAEO,iBACN,mBACE,4CACA,qDADA,cAEA,oBAAC,QAAD,EACA,OAAO,CAAE,KAAKb,KAAL,CAAWG,oBADpB,CAEA,QAAQ,CAAI,kBAACa,KAAD,QAAS,CAAA,MAAI,CAACD,wBAAL,CAA8BC,KAA9B,CAAT,EAFZ,gCAFA,cASA,2CAAI,oBAAC,IAAD,EAAM,EAAE,CAAC,cAAT,kBAAJ,CATA,CAWC,KAAKhB,KAAL,CAAWG,oBAAX,cACC,oBAAC,SAAD,EAAW,IAAI,CAAG,KAAKH,KAAL,CAAWC,cAA7B,EADD,cAGC,oBAAC,SAAD,EAAW,IAAI,CAAG,KAAKD,KAAL,CAAWE,iBAA7B,EAdF,CADF,CAoBD,C,8BA7D4BV,KAAK,CAAC0B,S,EAgErC,cAAenB,CAAAA,gBAAf","sourcesContent":["import React from 'react'\r\nimport axios from 'axios';\r\nimport { Checkbox } from 'antd';\r\nimport {Link} from 'react-router-dom'\r\nimport ListNotes from '../components/ListNotes.js'\r\n\r\nfunction checkArchived(entry){\r\n  return(!entry['archived'])\r\n}\r\n\r\nclass ListNoteListView extends React.Component{\r\n\r\n  state ={\r\n    all_list_notes: [],\r\n    active_list_notes:[],\r\n    list_archive_display:false,\r\n\r\n  }\r\n\r\n  fetchAllListNotes = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/list_notes_by_user?token=${localStorage['token']}`).then(res => {\r\n      this.setState({\r\n        all_list_notes: res.data\r\n      });\r\n      console.log(res.data)\r\n    });\r\n  }\r\n\r\n  fetchActiveListNotes = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/list_notes_by_user?token=${localStorage['token']}`).then(res => {\r\n      this.setState({\r\n        active_list_notes: res.data.filter(checkArchived)\r\n      });\r\n      console.log(res.data)\r\n    });\r\n  }\r\n\r\n  changeListArchiveDisplay = (event) => {\r\n    const status = this.state.list_archive_display\r\n    this.setState({\r\n      list_archive_display: !status\r\n    })\r\n    console.log(status)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchAllListNotes();\r\n    this.fetchActiveListNotes();\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n      <h1> ListNoteListView.js</h1>\r\n      <Checkbox\r\n      checked={this.state.list_archive_display}\r\n      onChange = {(event)=>this.changeListArchiveDisplay(event)}\r\n      >\r\n      Display Archived List Notes\r\n      </Checkbox>\r\n\r\n      <h2><Link to=\"/create_list\">New List Note</Link></h2>\r\n\r\n      {this.state.list_archive_display ?\r\n        <ListNotes data ={this.state.all_list_notes}/>\r\n        :\r\n        <ListNotes data ={this.state.active_list_notes}/>\r\n      }\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListNoteListView\r\n"]},"metadata":{},"sourceType":"module"}