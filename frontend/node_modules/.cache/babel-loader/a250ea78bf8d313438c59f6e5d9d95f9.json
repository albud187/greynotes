{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Checkbox,Button}from'antd';import axios from'axios';function TrueorFalse(input){if(input=false){return 0;}if(input=true){return 1;}}var ArchiveListNoteCheckbox=/*#__PURE__*/function(_React$Component){_inherits(ArchiveListNoteCheckbox,_React$Component);var _super=_createSuper(ArchiveListNoteCheckbox);function ArchiveListNoteCheckbox(){var _this;_classCallCheck(this,ArchiveListNoteCheckbox);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={checked:_this.props.data.archived};_this.onCheck=function(event,noteID){event.preventDefault();axios.put(\"http://127.0.0.1:8000/api/ListNotes/\".concat(noteID,\"/\"),{archived:event.target.checked,author:_this.props.data.author,title:_this.props.data.title});_this.setState({checked:event.target.checked});console.log(event.target.checked);};return _this;}_createClass(ArchiveListNoteCheckbox,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"p\",{style:{marginBottom:'20px'}},/*#__PURE__*/React.createElement(Checkbox,{checked:this.state.checked,onChange:function onChange(event,noteID){return _this2.onCheck(event,_this2.props.data.id);}})));}}]);return ArchiveListNoteCheckbox;}(React.Component);export default ArchiveListNoteCheckbox;","map":{"version":3,"sources":["C:/Users/alfab/Documents/_Projects/greynotes/frontend/src/forms/ArchiveListNoteCheckbox.js"],"names":["React","Checkbox","Button","axios","TrueorFalse","input","ArchiveListNoteCheckbox","state","checked","props","data","archived","onCheck","event","noteID","preventDefault","put","target","author","title","setState","console","log","marginBottom","id","Component"],"mappings":"4sBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,CAAmBC,MAAnB,KAAiC,MAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,QAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,CAC1B,GAAIA,KAAK,CAAG,KAAZ,CAAkB,CAChB,MAAO,EAAP,CACD,CACD,GAAIA,KAAK,CAAG,IAAZ,CAAiB,CACf,MAAO,EAAP,CACD,CAEF,C,GAEKC,CAAAA,uB,2YAEJC,K,CAAQ,CACNC,OAAO,CAAE,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,QADnB,C,OAKRC,O,CAAU,SAACC,KAAD,CAAOC,MAAP,CAAiB,CACzBD,KAAK,CAACE,cAAN,GACAZ,KAAK,CAACa,GAAN,+CAAiDF,MAAjD,MAA2D,CACzDH,QAAQ,CAAEE,KAAK,CAACI,MAAN,CAAaT,OADkC,CAEzDU,MAAM,CAAE,MAAKT,KAAL,CAAWC,IAAX,CAAgBQ,MAFiC,CAGzDC,KAAK,CAAE,MAAKV,KAAL,CAAWC,IAAX,CAAgBS,KAHkC,CAA3D,EAKA,MAAKC,QAAL,CAAc,CACZZ,OAAO,CAAEK,KAAK,CAACI,MAAN,CAAaT,OADV,CAAd,EAGAa,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACI,MAAN,CAAaT,OAAzB,EACD,C,0FAEQ,iBAEP,mBACE,qDACE,yBAAG,KAAK,CAAE,CAAEe,YAAY,CAAE,MAAhB,CAAV,eACE,oBAAC,QAAD,EACE,OAAO,CAAE,KAAKhB,KAAL,CAAWC,OADtB,CAEE,QAAQ,CAAE,kBAACK,KAAD,CAAOC,MAAP,QAAgB,CAAA,MAAI,CAACF,OAAL,CAAaC,KAAb,CAAmB,MAAI,CAACJ,KAAL,CAAWC,IAAX,CAAgBc,EAAnC,CAAhB,EAFZ,EADF,CADF,CADF,CAYD,C,qCAlCmCxB,KAAK,CAACyB,S,EAqC5C,cAAenB,CAAAA,uBAAf","sourcesContent":["import React from 'react'\r\nimport { Checkbox, Button } from 'antd';\r\nimport axios from 'axios'\r\n\r\nfunction TrueorFalse(input) {\r\n  if (input = false){\r\n    return(0)\r\n  }\r\n  if (input = true){\r\n    return(1)\r\n  }\r\n\r\n}\r\n\r\nclass ArchiveListNoteCheckbox extends React.Component {\r\n\r\n  state = {\r\n    checked: this.props.data.archived,\r\n\r\n  };\r\n\r\n  onCheck = (event,noteID) =>{\r\n    event.preventDefault()\r\n    axios.put(`http://127.0.0.1:8000/api/ListNotes/${noteID}/`,{\r\n      archived: event.target.checked,\r\n      author: this.props.data.author,\r\n      title: this.props.data.title\r\n    })\r\n    this.setState({\r\n      checked: event.target.checked,\r\n    });\r\n    console.log(event.target.checked)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <p style={{ marginBottom: '20px' }}>\r\n          <Checkbox\r\n            checked={this.state.checked}\r\n            onChange={(event,noteID)=>this.onCheck(event,this.props.data.id)}\r\n          >\r\n          </Checkbox>\r\n        </p>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArchiveListNoteCheckbox\r\n"]},"metadata":{},"sourceType":"module"}