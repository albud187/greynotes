{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\src\\\\forms\\\\TextNoteDetailUpdate.js\";\nimport React from 'react';\nimport { Input } from 'antd';\nimport axios from 'axios';\nimport * as API_PATHS from '../api_path.js';\nconst API_PATH = API_PATHS.API_PATH;\n\nclass TextNoteDetailUpdate extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      note_groups: [],\n      textnote: {},\n      userid: ''\n    };\n\n    this.fetchNoteGroups = () => {\n      axios.get(`${API_PATH}api/notegroups_by_user?token=${localStorage['token']}`).then(result => {\n        this.setState({\n          note_groups: result.data\n        });\n        console.log(result.data);\n      });\n    };\n\n    this.fetchUserId = () => {\n      axios.get(`${API_PATH}api/Tokens/${localStorage['token']}/`).then(result => {\n        this.setState({\n          userid: result.data.user\n        });\n      });\n    };\n\n    this.handleFormSubmit = (event, textnoteID) => {\n      event.preventDefault();\n      const title = event.target.elements.title.value;\n      const content = event.target.elements.content.value;\n      const notegroup = event.target.elements.notegroup.value;\n      console.log(title, content);\n      axios.put(`${API_PATH}api/TextNotes/${textnoteID}/`, {\n        author: this.state.userid,\n        title: title,\n        content: content,\n        note_group: notegroup\n      }).then(res => console.log(res)).catch(err => console.log(err));\n      alert('note updated');\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUserId();\n    this.fetchNoteGroups();\n    const textnoteID = this.props.textnoteID;\n    axios.get(`${API_PATH}api/TextNotes/${textnoteID}/`).then(res => {\n      this.setState({\n        textnote: res.data\n      });\n      console.log(\"component did mount \" + this.state.textnote.title);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: (event, textnoteID) => this.handleFormSubmit(event, this.props.textnoteID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 14\n      }\n    }, \"Title\")), /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"1\",\n      cols: \"80\",\n      name: \"title\",\n      defaultValue: this.props.textnoteTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 14\n      }\n    }, \"Content\")), /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"9\",\n      cols: \"80\",\n      name: \"content\",\n      defaultValue: this.state.textnote.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"notegroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 34\n      }\n    }, \"NoteGroup: \")), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"notegroup\",\n      id: \"notegroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"_ungrouped_\"), this.state.note_groups.map(val => val.id == this.state.textnote.note_group ? /*#__PURE__*/React.createElement(\"option\", {\n      value: val.id,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, val.group_name) : /*#__PURE__*/React.createElement(\"option\", {\n      value: val.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, val.group_name))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"Update\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default TextNoteDetailUpdate;","map":{"version":3,"sources":["C:/Users/alfab/Documents/_Projects/greynotes/frontend/src/forms/TextNoteDetailUpdate.js"],"names":["React","Input","axios","API_PATHS","API_PATH","TextNoteDetailUpdate","Component","state","note_groups","textnote","userid","fetchNoteGroups","get","localStorage","then","result","setState","data","console","log","fetchUserId","user","handleFormSubmit","event","textnoteID","preventDefault","title","target","elements","value","content","notegroup","put","author","note_group","res","catch","err","alert","componentDidMount","props","render","textnoteTitle","map","val","id","group_name"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Input } from 'antd';\r\nimport axios from 'axios';\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nclass TextNoteDetailUpdate extends React.Component {\r\n  state ={\r\n    note_groups: [],\r\n    textnote: {},\r\n    userid:''\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n    axios.get(`${API_PATH}api/notegroups_by_user?token=${localStorage['token']}`)\r\n    .then(result => {this.setState({\r\n        note_groups: result.data\r\n      });\r\n      console.log(result.data)\r\n    });\r\n  }\r\n\r\n  fetchUserId = () => {\r\n    axios.get(`${API_PATH}api/Tokens/${localStorage['token']}/`).then(result=>{\r\n      this.setState({\r\n        userid:result.data.user\r\n      })\r\n    })\r\n  }\r\n\r\n  handleFormSubmit = (event, textnoteID)=>{\r\n    event.preventDefault()\r\n    const title = event.target.elements.title.value;\r\n    const content = event.target.elements.content.value;\r\n    const notegroup = event.target.elements.notegroup.value\r\n\r\n    console.log(title,content);\r\n    axios.put(`${API_PATH}api/TextNotes/${textnoteID}/`, {\r\n        author: this.state.userid,\r\n        title: title,\r\n        content: content,\r\n        note_group: notegroup\r\n      })\r\n      .then(res=>console.log(res))\r\n      .catch(err=>console.log(err));\r\n      alert('note updated')\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.fetchUserId()\r\n      this.fetchNoteGroups();\r\n        const textnoteID = this.props.textnoteID;\r\n        axios.get(`${API_PATH}api/TextNotes/${textnoteID}/`).then(res => {\r\n          this.setState({\r\n            textnote: res.data\r\n          });\r\n          console.log(\"component did mount \"+this.state.textnote.title)\r\n        });\r\n      }\r\n\r\nrender(){\r\n  return (\r\n      <div>\r\n        <form onSubmit={(event, textnoteID)=>this.handleFormSubmit(event, this.props.textnoteID)}>\r\n          <p><strong>Title</strong></p>\r\n              <textarea rows=\"1\" cols=\"80\" name=\"title\" defaultValue = {this.props.textnoteTitle}/>\r\n          <p><strong>Content</strong></p>\r\n              <textarea rows=\"9\" cols=\"80\" name=\"content\" defaultValue={this.state.textnote.content} />\r\n                <br/>\r\n          <label for=\"notegroup\"><strong>NoteGroup: </strong></label>\r\n\r\n\r\n              <select name=\"notegroup\" id=\"notegroup\">\r\n                <option value=\"\">_ungrouped_</option>\r\n                {this.state.note_groups.map((val)=>(\r\n                  val.id == this.state.textnote.note_group ? (\r\n                    <option value={val.id} selected >{val.group_name}</option>\r\n                  ):\r\n                  <option value={val.id}>{val.group_name}</option>\r\n                ))}\r\n              </select>\r\n            <br/>\r\n            <br/>\r\n            <button type=\"submit\">Update</button>\r\n        </form>\r\n        <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextNoteDetailUpdate;\r\n"]},"metadata":{},"sourceType":"module"}