{"ast":null,"code":"import React from'react';import{List,Avatar,Space}from'antd';import{MessageOutlined,LikeOutlined,StarOutlined}from'@ant-design/icons';import{Row,Col,Divider}from'antd';import{Card}from'antd';import{Checkbox}from'antd';import axios from'axios';import ArchiveTextNoteCheckbox from'../forms/ArchiveTextNoteCheckbox.js';import*as API_PATHS from'../api_path.js';var API_PATH=API_PATHS.API_PATH;var TextNotes=function TextNotes(props){var ItemInfo='blank';var ChangeStatus=function ChangeStatus(event,itemid){event.preventDefault();console.log('test');axios.get(\"\".concat(API_PATH,\"api/TextNotes/\").concat(itemid,\"/\")).then(function(res){ItemInfo=res.data;});console.log(ItemInfo);};return/*#__PURE__*/React.createElement(List,{grid:{gutter:16,column:4},dataSource:props.data,renderItem:function renderItem(item){return/*#__PURE__*/React.createElement(List.Item,{key:item.id},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(List.Item.Meta,{title:/*#__PURE__*/React.createElement(\"a\",{href:\"/text_note/\"+\"\".concat(item.id)},item.id,\" - \",item.title)}),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"date created\"),\" : \",item.date_created),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"group\"),\": \",item.note_group_name),/*#__PURE__*/React.createElement(ArchiveTextNoteCheckbox,{data:item}),\"Archive\"));}});};export default TextNotes;","map":{"version":3,"sources":["C:/Users/alfab/Documents/_Projects/greynotes/frontend/src/components/TextNotes.js"],"names":["React","List","Avatar","Space","MessageOutlined","LikeOutlined","StarOutlined","Row","Col","Divider","Card","Checkbox","axios","ArchiveTextNoteCheckbox","API_PATHS","API_PATH","TextNotes","props","ItemInfo","ChangeStatus","event","itemid","preventDefault","console","log","get","then","res","data","gutter","column","item","id","title","date_created","note_group_name"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,KAAvB,KAAoC,MAApC,CACA,OAASC,eAAT,CAA0BC,YAA1B,CAAwCC,YAAxC,KAA4D,mBAA5D,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,OAAnB,KAAkC,MAAlC,CACA,OAASC,IAAT,KAAqB,MAArB,CACA,OAAQC,QAAR,KAAuB,MAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,uBAAP,KAAoC,qCAApC,CAEA,MAAO,GAAKC,CAAAA,SAAZ,KAA2B,gBAA3B,CACA,GAAMC,CAAAA,QAAQ,CAAGD,SAAS,CAACC,QAA3B,CAEA,GAAMC,CAAAA,SAAS,CAAE,QAAXA,CAAAA,SAAW,CAACC,KAAD,CAAS,CACxB,GAAIC,CAAAA,QAAQ,CAAE,OAAd,CACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAOC,MAAP,CAAiB,CACtCD,KAAK,CAACE,cAAN,GACEC,OAAO,CAACC,GAAR,CAAY,MAAZ,EACAZ,KAAK,CAACa,GAAN,WAAaV,QAAb,0BAAsCM,MAAtC,OACGK,IADH,CACQ,SAAAC,GAAG,CAAE,CAACT,QAAQ,CAACS,GAAG,CAACC,IAAb,CAAkB,CADhC,EAEEL,OAAO,CAACC,GAAR,CAAYN,QAAZ,EACH,CAND,CAOA,mBAEA,oBAAC,IAAD,EACE,IAAI,CAAE,CAAEW,MAAM,CAAE,EAAV,CAAcC,MAAM,CAAE,CAAtB,CADR,CAGE,UAAU,CAAEb,KAAK,CAACW,IAHpB,CAKE,UAAU,CAAE,oBAAAG,IAAI,qBACd,oBAAC,IAAD,CAAM,IAAN,EAAW,GAAG,CAAEA,IAAI,CAACC,EAArB,eACA,oBAAC,IAAD,mBACE,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX,EACE,KAAK,cAAE,yBAAG,IAAI,CAAE,wBAAiBD,IAAI,CAACC,EAAtB,CAAT,EACND,IAAI,CAACC,EADC,OACMD,IAAI,CAACE,KADX,CADT,EADF,cAME,0CAAG,iDAAH,OAAoCF,IAAI,CAACG,YAAzC,CANF,cAOE,0CAAG,0CAAH,MAA4BH,IAAI,CAACI,eAAjC,CAPF,cAQE,oBAAC,uBAAD,EACA,IAAI,CAAEJ,IADN,EARF,WADA,CADc,EALlB,EAFA,CA0BD,CAnCD,CAqCA,cAAef,CAAAA,SAAf","sourcesContent":["import React from 'react';\r\n\r\nimport { List, Avatar, Space } from 'antd';\r\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport { Card } from 'antd';\r\nimport {Checkbox} from 'antd'\r\nimport axios from 'axios'\r\nimport ArchiveTextNoteCheckbox from '../forms/ArchiveTextNoteCheckbox.js'\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nconst TextNotes =(props)=>{\r\n  var ItemInfo ='blank'\r\n  const ChangeStatus = (event,itemid) =>{\r\n  event.preventDefault()\r\n    console.log('test')\r\n    axios.get(`${API_PATH}api/TextNotes/${itemid}/`)\r\n      .then(res=>{ItemInfo=res.data})\r\n      console.log(ItemInfo)\r\n  }\r\n  return(\r\n\r\n  <List\r\n    grid={{ gutter: 16, column: 4}}\r\n\r\n    dataSource={props.data}\r\n\r\n    renderItem={item => (\r\n      <List.Item key={item.id}>\r\n      <Card>\r\n        <List.Item.Meta\r\n          title={<a href={\"/text_note/\"+`${item.id}`}>\r\n          {item.id} - {item.title}\r\n          </a>}/>\r\n\r\n        <p><strong>date created</strong> : {item.date_created}</p>\r\n        <p><strong>group</strong>: {item.note_group_name}</p>\r\n        <ArchiveTextNoteCheckbox\r\n        data={item}/>\r\n        Archive\r\n\r\n        </Card>\r\n      </List.Item>\r\n    )}\r\n  />\r\n  )\r\n}\r\n\r\nexport default TextNotes\r\n"]},"metadata":{},"sourceType":"module"}