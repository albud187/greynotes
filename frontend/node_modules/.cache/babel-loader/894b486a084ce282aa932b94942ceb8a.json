{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Input}from'antd';import axios from'axios';import*as API_PATHS from'../api_path.js';var API_PATH=API_PATHS.API_PATH;var TextNoteDetailUpdate=/*#__PURE__*/function(_React$Component){_inherits(TextNoteDetailUpdate,_React$Component);var _super=_createSuper(TextNoteDetailUpdate);function TextNoteDetailUpdate(){var _this;_classCallCheck(this,TextNoteDetailUpdate);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={note_groups:[],textnote:{},userid:''};_this.fetchNoteGroups=function(){axios.get(\"\".concat(API_PATH,\"api/notegroups_by_user?token=\").concat(localStorage['token'])).then(function(result){_this.setState({note_groups:result.data});console.log(result.data);});};_this.fetchUserId=function(){axios.get(\"\".concat(API_PATH,\"api/Tokens/\").concat(localStorage['token'],\"/\")).then(function(result){_this.setState({userid:result.data.user});});};_this.handleFormSubmit=function(event,textnoteID){event.preventDefault();var title=event.target.elements.title.value;var content=event.target.elements.content.value;var notegroup=event.target.elements.notegroup.value;console.log(title,content);axios.put(\"\".concat(API_PATH,\"api/TextNotes/\").concat(textnoteID,\"/\"),{author:_this.state.userid,title:title,content:content,note_group:notegroup}).then(function(res){return console.log(res);}).catch(function(err){return console.log(err);});alert('note updated');};return _this;}_createClass(TextNoteDetailUpdate,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.fetchUserId();this.fetchNoteGroups();var textnoteID=this.props.textnoteID;axios.get(\"\".concat(API_PATH,\"api/TextNotes/\").concat(textnoteID,\"/\")).then(function(res){_this2.setState({textnote:res.data});console.log(\"component did mount \"+_this2.state.textnote.title);});}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:function onSubmit(event,textnoteID){return _this3.handleFormSubmit(event,_this3.props.textnoteID);}},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Title\")),/*#__PURE__*/React.createElement(\"textarea\",{rows:\"1\",cols:\"80\",name:\"title\",defaultValue:this.props.textnoteTitle}),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Content\")),/*#__PURE__*/React.createElement(\"textarea\",{rows:\"9\",cols:\"80\",name:\"content\",defaultValue:this.state.textnote.content}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"label\",{for:\"notegroup\"},/*#__PURE__*/React.createElement(\"strong\",null,\"NoteGroup: \")),/*#__PURE__*/React.createElement(\"select\",{name:\"notegroup\",id:\"notegroup\"},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"_ungrouped_\"),this.state.note_groups.map(function(val){return val.id==_this3.state.textnote.note_group?/*#__PURE__*/React.createElement(\"option\",{value:val.id,selected:true},val.group_name):/*#__PURE__*/React.createElement(\"option\",{value:val.id},val.group_name);})),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Update\")),/*#__PURE__*/React.createElement(\"br\",null));}}]);return TextNoteDetailUpdate;}(React.Component);export default TextNoteDetailUpdate;","map":{"version":3,"sources":["C:/Users/alfab/Documents/_Projects/greynotes/frontend/src/forms/TextNoteDetailUpdate.js"],"names":["React","Input","axios","API_PATHS","API_PATH","TextNoteDetailUpdate","state","note_groups","textnote","userid","fetchNoteGroups","get","localStorage","then","result","setState","data","console","log","fetchUserId","user","handleFormSubmit","event","textnoteID","preventDefault","title","target","elements","value","content","notegroup","put","author","note_group","res","catch","err","alert","props","textnoteTitle","map","val","id","group_name","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Input } from 'antd';\r\nimport axios from 'axios';\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nclass TextNoteDetailUpdate extends React.Component {\r\n  state ={\r\n    note_groups: [],\r\n    textnote: {},\r\n    userid:''\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n    axios.get(`${API_PATH}api/notegroups_by_user?token=${localStorage['token']}`)\r\n    .then(result => {this.setState({\r\n        note_groups: result.data\r\n      });\r\n      console.log(result.data)\r\n    });\r\n  }\r\n\r\n  fetchUserId = () => {\r\n    axios.get(`${API_PATH}api/Tokens/${localStorage['token']}/`).then(result=>{\r\n      this.setState({\r\n        userid:result.data.user\r\n      })\r\n    })\r\n  }\r\n\r\n  handleFormSubmit = (event, textnoteID)=>{\r\n    event.preventDefault()\r\n    const title = event.target.elements.title.value;\r\n    const content = event.target.elements.content.value;\r\n    const notegroup = event.target.elements.notegroup.value\r\n\r\n    console.log(title,content);\r\n    axios.put(`${API_PATH}api/TextNotes/${textnoteID}/`, {\r\n        author: this.state.userid,\r\n        title: title,\r\n        content: content,\r\n        note_group: notegroup\r\n      })\r\n      .then(res=>console.log(res))\r\n      .catch(err=>console.log(err));\r\n      alert('note updated')\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.fetchUserId()\r\n      this.fetchNoteGroups();\r\n        const textnoteID = this.props.textnoteID;\r\n        axios.get(`${API_PATH}api/TextNotes/${textnoteID}/`).then(res => {\r\n          this.setState({\r\n            textnote: res.data\r\n          });\r\n          console.log(\"component did mount \"+this.state.textnote.title)\r\n        });\r\n      }\r\n\r\nrender(){\r\n  return (\r\n      <div>\r\n        <form onSubmit={(event, textnoteID)=>this.handleFormSubmit(event, this.props.textnoteID)}>\r\n          <p><strong>Title</strong></p>\r\n              <textarea rows=\"1\" cols=\"80\" name=\"title\" defaultValue = {this.props.textnoteTitle}/>\r\n          <p><strong>Content</strong></p>\r\n              <textarea rows=\"9\" cols=\"80\" name=\"content\" defaultValue={this.state.textnote.content} />\r\n                <br/>\r\n          <label for=\"notegroup\"><strong>NoteGroup: </strong></label>\r\n\r\n\r\n              <select name=\"notegroup\" id=\"notegroup\">\r\n                <option value=\"\">_ungrouped_</option>\r\n                {this.state.note_groups.map((val)=>(\r\n                  val.id == this.state.textnote.note_group ? (\r\n                    <option value={val.id} selected >{val.group_name}</option>\r\n                  ):\r\n                  <option value={val.id}>{val.group_name}</option>\r\n                ))}\r\n              </select>\r\n            <br/>\r\n            <br/>\r\n            <button type=\"submit\">Update</button>\r\n        </form>\r\n        <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextNoteDetailUpdate;\r\n"]},"metadata":{},"sourceType":"module"}