{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Input}from'antd';import axios from'axios';var TextNoteDetailUpdate=/*#__PURE__*/function(_React$Component){_inherits(TextNoteDetailUpdate,_React$Component);var _super=_createSuper(TextNoteDetailUpdate);function TextNoteDetailUpdate(){var _this;_classCallCheck(this,TextNoteDetailUpdate);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={note_groups:[],textnote:{}};_this.fetchNoteGroups=function(){axios.get(\"http://127.0.0.1:8000/api/notegroups_by_user?token=\"+localStorage['token']).then(function(result){_this.setState({note_groups:result.data});console.log(result.data);});};_this.handleFormSubmit=function(event,textnoteID){event.preventDefault();var title=event.target.elements.title.value;var content=event.target.elements.content.value;var notegroup=event.target.elements.notegroup.value;console.log(title,content);axios.put(\"http://127.0.0.1:8000/api/TextNotes/\".concat(textnoteID,\"/\"),{title:title,content:content,note_group:notegroup}).then(function(res){return console.log(res);}).catch(function(err){return console.log(err);});alert('note updated');};return _this;}_createClass(TextNoteDetailUpdate,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.fetchNoteGroups();var textnoteID=this.props.textnoteID;axios.get(\"http://127.0.0.1:8000/api/TextNotes/\".concat(textnoteID,\"/\")).then(function(res){_this2.setState({textnote:res.data});console.log(\"component did mount \"+_this2.state.textnote.title);});}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"textnoteDetailUpdate.js\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:function onSubmit(event,textnoteID){return _this3.handleFormSubmit(event,_this3.props.textnoteID);}},/*#__PURE__*/React.createElement(\"p\",null,\"Title\"),/*#__PURE__*/React.createElement(\"textarea\",{rows:\"1\",cols:\"50\",name:\"title\",defaultValue:this.props.textnoteTitle}),/*#__PURE__*/React.createElement(\"p\",null,\"Content\"),/*#__PURE__*/React.createElement(\"textarea\",{rows:\"9\",cols:\"50\",name:\"content\",defaultValue:this.state.textnote.content}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"label\",{for:\"notegroup\"},\"NoteGroup: \"),/*#__PURE__*/React.createElement(\"select\",{name:\"notegroup\",id:\"notegroup\"},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"_ungrouped_\"),this.state.note_groups.map(function(val){return val.id==_this3.state.textnote.note_group?/*#__PURE__*/React.createElement(\"option\",{value:val.id,selected:true},val.group_name):/*#__PURE__*/React.createElement(\"option\",{value:val.id},val.group_name);})),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Update\")),/*#__PURE__*/React.createElement(\"br\",null));}}]);return TextNoteDetailUpdate;}(React.Component);export default TextNoteDetailUpdate;","map":{"version":3,"sources":["C:/Users/alfab/Documents/_Projects/greynotes/frontend/src/forms/TextNoteDetailUpdate.js"],"names":["React","Input","axios","TextNoteDetailUpdate","state","note_groups","textnote","fetchNoteGroups","get","localStorage","then","result","setState","data","console","log","handleFormSubmit","event","textnoteID","preventDefault","title","target","elements","value","content","notegroup","put","note_group","res","catch","err","alert","props","textnoteTitle","map","val","id","group_name","Component"],"mappings":"4sBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,KAAsB,MAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,GAGMC,CAAAA,oB,+XACJC,K,CAAO,CACLC,WAAW,CAAE,EADR,CAELC,QAAQ,CAAE,EAFL,C,OAKPC,e,CAAkB,UAAM,CACtBL,KAAK,CAACM,GAAN,CAAU,sDAAsDC,YAAY,CAAC,OAAD,CAA5E,EACCC,IADD,CACM,SAAAC,MAAM,CAAI,CAAC,MAAKC,QAAL,CAAc,CAC3BP,WAAW,CAAEM,MAAM,CAACE,IADO,CAAd,EAGfC,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,IAAnB,EACD,CALD,EAMD,C,OAGDG,gB,CAAmB,SAACC,KAAD,CAAQC,UAAR,CAAqB,CACtCD,KAAK,CAACE,cAAN,GACA,GAAMC,CAAAA,KAAK,CAAGH,KAAK,CAACI,MAAN,CAAaC,QAAb,CAAsBF,KAAtB,CAA4BG,KAA1C,CACA,GAAMC,CAAAA,OAAO,CAAGP,KAAK,CAACI,MAAN,CAAaC,QAAb,CAAsBE,OAAtB,CAA8BD,KAA9C,CACA,GAAME,CAAAA,SAAS,CAAGR,KAAK,CAACI,MAAN,CAAaC,QAAb,CAAsBG,SAAtB,CAAgCF,KAAlD,CAEAT,OAAO,CAACC,GAAR,CAAYK,KAAZ,CAAkBI,OAAlB,EACAtB,KAAK,CAACwB,GAAN,+CAAiDR,UAAjD,MAAgE,CAC5DE,KAAK,CAAEA,KADqD,CAE5DI,OAAO,CAAEA,OAFmD,CAG5DG,UAAU,CAAEF,SAHgD,CAAhE,EAKGf,IALH,CAKQ,SAAAkB,GAAG,QAAEd,CAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ,CAAF,EALX,EAMGC,KANH,CAMS,SAAAC,GAAG,QAAEhB,CAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ,CAAF,EANZ,EAOEC,KAAK,CAAC,cAAD,CAAL,CACD,C,6GAEmB,iBAClB,KAAKxB,eAAL,GACE,GAAMW,CAAAA,UAAU,CAAG,KAAKc,KAAL,CAAWd,UAA9B,CACAhB,KAAK,CAACM,GAAN,+CAAiDU,UAAjD,OAAgER,IAAhE,CAAqE,SAAAkB,GAAG,CAAI,CAC1E,MAAI,CAAChB,QAAL,CAAc,CACZN,QAAQ,CAAEsB,GAAG,CAACf,IADF,CAAd,EAGAC,OAAO,CAACC,GAAR,CAAY,uBAAuB,MAAI,CAACX,KAAL,CAAWE,QAAX,CAAoBc,KAAvD,EACD,CALD,EAMD,C,uCAEC,iBACN,mBACI,4CACA,wDADA,cAEE,4BAAM,QAAQ,CAAE,kBAACH,KAAD,CAAQC,UAAR,QAAqB,CAAA,MAAI,CAACF,gBAAL,CAAsBC,KAAtB,CAA6B,MAAI,CAACe,KAAL,CAAWd,UAAxC,CAArB,EAAhB,eACE,qCADF,cAEM,gCAAU,IAAI,CAAC,GAAf,CAAmB,IAAI,CAAC,IAAxB,CAA6B,IAAI,CAAC,OAAlC,CAA0C,YAAY,CAAI,KAAKc,KAAL,CAAWC,aAArE,EAFN,cAGE,uCAHF,cAIM,gCAAU,IAAI,CAAC,GAAf,CAAmB,IAAI,CAAC,IAAxB,CAA6B,IAAI,CAAC,SAAlC,CAA4C,YAAY,CAAE,KAAK7B,KAAL,CAAWE,QAAX,CAAoBkB,OAA9E,EAJN,cAKQ,8BALR,cAME,6BAAO,GAAG,CAAC,WAAX,gBANF,cASM,8BAAQ,IAAI,CAAC,WAAb,CAAyB,EAAE,CAAC,WAA5B,eACE,8BAAQ,KAAK,CAAC,EAAd,gBADF,CAEG,KAAKpB,KAAL,CAAWC,WAAX,CAAuB6B,GAAvB,CAA2B,SAACC,GAAD,QAC1BA,CAAAA,GAAG,CAACC,EAAJ,EAAU,MAAI,CAAChC,KAAL,CAAWE,QAAX,CAAoBqB,UAA9B,cACE,8BAAQ,KAAK,CAAEQ,GAAG,CAACC,EAAnB,CAAuB,QAAQ,KAA/B,EAAkCD,GAAG,CAACE,UAAtC,CADF,cAGA,8BAAQ,KAAK,CAAEF,GAAG,CAACC,EAAnB,EAAwBD,GAAG,CAACE,UAA5B,CAJ0B,EAA3B,CAFH,CATN,cAkBI,8BAlBJ,cAmBI,8BAnBJ,cAoBI,8BAAQ,IAAI,CAAC,QAAb,WApBJ,CAFF,cAwBE,8BAxBF,CADJ,CA4BC,C,kCAzEgCrC,KAAK,CAACsC,S,EA4EzC,cAAenC,CAAAA,oBAAf","sourcesContent":["import React from 'react';\r\nimport { Input } from 'antd';\r\nimport axios from 'axios';\r\n\r\n\r\nclass TextNoteDetailUpdate extends React.Component {\r\n  state ={\r\n    note_groups: [],\r\n    textnote: {}\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n    axios.get(\"http://127.0.0.1:8000/api/notegroups_by_user?token=\"+localStorage['token'])\r\n    .then(result => {this.setState({\r\n        note_groups: result.data\r\n      });\r\n      console.log(result.data)\r\n    });\r\n  }\r\n\r\n\r\n  handleFormSubmit = (event, textnoteID)=>{\r\n    event.preventDefault()\r\n    const title = event.target.elements.title.value;\r\n    const content = event.target.elements.content.value;\r\n    const notegroup = event.target.elements.notegroup.value\r\n\r\n    console.log(title,content);\r\n    axios.put(`http://127.0.0.1:8000/api/TextNotes/${textnoteID}/`, {\r\n        title: title,\r\n        content: content,\r\n        note_group: notegroup\r\n      })\r\n      .then(res=>console.log(res))\r\n      .catch(err=>console.log(err));\r\n      alert('note updated')\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.fetchNoteGroups();\r\n        const textnoteID = this.props.textnoteID;\r\n        axios.get(`http://127.0.0.1:8000/api/TextNotes/${textnoteID}/`).then(res => {\r\n          this.setState({\r\n            textnote: res.data\r\n          });\r\n          console.log(\"component did mount \"+this.state.textnote.title)\r\n        });\r\n      }\r\n\r\nrender(){\r\n  return (\r\n      <div>\r\n      <h1>textnoteDetailUpdate.js</h1>\r\n        <form onSubmit={(event, textnoteID)=>this.handleFormSubmit(event, this.props.textnoteID)}>\r\n          <p>Title</p>\r\n              <textarea rows=\"1\" cols=\"50\" name=\"title\" defaultValue = {this.props.textnoteTitle}/>\r\n          <p>Content</p>\r\n              <textarea rows=\"9\" cols=\"50\" name=\"content\" defaultValue={this.state.textnote.content} />\r\n                <br/>\r\n          <label for=\"notegroup\">NoteGroup: </label>\r\n\r\n\r\n              <select name=\"notegroup\" id=\"notegroup\">\r\n                <option value=\"\">_ungrouped_</option>\r\n                {this.state.note_groups.map((val)=>(\r\n                  val.id == this.state.textnote.note_group ? (\r\n                    <option value={val.id} selected >{val.group_name}</option>\r\n                  ):\r\n                  <option value={val.id}>{val.group_name}</option>\r\n                ))}\r\n              </select>\r\n            <br/>\r\n            <br/>\r\n            <button type=\"submit\">Update</button>\r\n        </form>\r\n        <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextNoteDetailUpdate;\r\n"]},"metadata":{},"sourceType":"module"}