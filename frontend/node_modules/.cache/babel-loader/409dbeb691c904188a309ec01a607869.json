{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\src\\\\forms\\\\TextNoteDetailUpdate.js\";\nimport React, { useState, setState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport axios from 'axios';\nconst {\n  TextArea\n} = Input;\n\nclass TextNoteDetailUpdate extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      note_groups: [],\n      textnote: {}\n    };\n\n    this.fetchNoteGroups = () => {\n      axios.get(\"http://127.0.0.1:8000/api/NoteGroups/\").then(result => {\n        this.setState({\n          note_groups: result.data\n        });\n        console.log(result.data);\n      });\n    };\n\n    this.handleFormSubmit = (event, textnoteID) => {\n      event.preventDefault();\n      const title = event.target.elements.title.value;\n      const content = event.target.elements.content.value;\n      const notegroup = event.target.elements.notegroup.value;\n      console.log(title, content);\n      axios.put(`http://127.0.0.1:8000/api/TextNotes/${textnoteID}/`, {\n        title: title,\n        content: content,\n        note_group: notegroup\n      }).then(res => console.log(res)).catch(err => console.log(err));\n      alert('note updated');\n    };\n  }\n\n  componentDidMount() {\n    this.fetchNoteGroups();\n    const textnoteID = this.props.textnoteID;\n    axios.get(`http://127.0.0.1:8000/api/TextNotes/${textnoteID}/`).then(res => {\n      this.setState({\n        textnote: res.data\n      });\n      console.log(\"component did mount \" + this.state.textnote.title);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, \"textnoteDetailUpdate.js\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: (event, textnoteID) => this.handleFormSubmit(event, this.props.textnoteID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"1\",\n      cols: \"50\",\n      name: \"title\",\n      defaultValue: this.props.textnoteTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"Content\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"9\",\n      cols: \"50\",\n      name: \"content\",\n      defaultValue: this.state.textnote.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"notegroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, \"NoteGroup: \"), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"notegroup\",\n      id: \"notegroup\",\n      defaultValue: this.props.textnote.note_group,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"_ungrouped_\"), this.state.note_groups.map(val => /*#__PURE__*/React.createElement(\"option\", {\n      value: val.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    }, val.group_name))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Update\")));\n  }\n\n}\n\nexport default TextNoteDetailUpdate;","map":{"version":3,"sources":["C:/Users/alfab/Documents/_Projects/greynotes/frontend/src/forms/TextNoteDetailUpdate.js"],"names":["React","useState","setState","Form","Input","Button","axios","TextArea","TextNoteDetailUpdate","Component","state","note_groups","textnote","fetchNoteGroups","get","then","result","data","console","log","handleFormSubmit","event","textnoteID","preventDefault","title","target","elements","value","content","notegroup","put","note_group","res","catch","err","alert","componentDidMount","props","render","textnoteTitle","map","val","id","group_name"],"mappings":"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","sourcesContent":["import React, { useState, setState } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport axios from 'axios';\r\nconst { TextArea } = Input;\r\n\r\nclass TextNoteDetailUpdate extends React.Component {\r\n  state ={\r\n    note_groups: [],\r\n    textnote: {}\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n    axios.get(\"http://127.0.0.1:8000/api/NoteGroups/\").then(result => {\r\n      this.setState({\r\n        note_groups: result.data\r\n      });\r\n      console.log(result.data)\r\n    });\r\n  }\r\n\r\n\r\n  handleFormSubmit = (event, textnoteID)=>{\r\n    event.preventDefault()\r\n    const title = event.target.elements.title.value;\r\n    const content = event.target.elements.content.value;\r\n    const notegroup = event.target.elements.notegroup.value\r\n\r\n    console.log(title,content);\r\n    axios.put(`http://127.0.0.1:8000/api/TextNotes/${textnoteID}/`, {\r\n        title: title,\r\n        content: content,\r\n        note_group: notegroup\r\n      })\r\n      .then(res=>console.log(res))\r\n      .catch(err=>console.log(err));\r\n      alert('note updated')\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.fetchNoteGroups();\r\n        const textnoteID = this.props.textnoteID;\r\n        axios.get(`http://127.0.0.1:8000/api/TextNotes/${textnoteID}/`).then(res => {\r\n          this.setState({\r\n            textnote: res.data\r\n          });\r\n          console.log(\"component did mount \"+this.state.textnote.title)\r\n        });\r\n      }\r\n\r\nrender(){\r\n  return (\r\n      <div>\r\n      <h1>textnoteDetailUpdate.js</h1>\r\n        <form onSubmit={(event, textnoteID)=>this.handleFormSubmit(event, this.props.textnoteID)}>\r\n          <p>Title</p>\r\n              <textarea rows=\"1\" cols=\"50\" name=\"title\" defaultValue = {this.props.textnoteTitle}/>\r\n          <p>Content</p>\r\n              <textarea rows=\"9\" cols=\"50\" name=\"content\" defaultValue={this.state.textnote.content} />\r\n\r\n              <label for=\"notegroup\">NoteGroup: </label>\r\n                <select name=\"notegroup\" id=\"notegroup\" defaultValue={this.props.textnote.note_group}>\r\n                <option value=\"\">_ungrouped_</option>\r\n                {this.state.note_groups.map((val)=>(\r\n                  <option value={val.id}>{val.group_name}</option>\r\n                ))}\r\n\r\n                </select>\r\n\r\n            <button type=\"submit\">Update</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextNoteDetailUpdate;\r\n"]},"metadata":{},"sourceType":"module"}