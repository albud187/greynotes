{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\src\\\\containers\\\\TextNoteListView.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { Checkbox } from 'antd';\nimport TextNotes from '../components/TextNotes.js';\nimport { Link } from 'react-router-dom';\n\nfunction checkArchived(entry) {\n  return entry['archived'];\n}\n\nclass TextNoteListView extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text_notes: [],\n      text_archive_display: false,\n      text_notes_active_only: []\n    };\n\n    this.fetchTextNotes = () => {\n      axios.get(`http://127.0.0.1:8000/api/text_notes_by_user?userid=${localStorage['userid']}`).then(res => {\n        this.setState({\n          text_notes: res.data\n        });\n        console.log(res.data);\n      });\n    };\n\n    this.fetchActiveTextNotes = () => {\n      axios.get(`http://127.0.0.1:8000/api/text_notes_by_user?userid=${localStorage['userid']}`).then(res => {\n        this.setState({\n          text_notes: res.data.filter(checkArchived)\n        });\n        console.log(res.data);\n      });\n    };\n\n    this.changeTextArchiveDisplay = event => {\n      const status = this.state.text_archive_display;\n      this.setState({\n        text_archive_display: !status\n      });\n      console.log(status);\n    };\n  }\n\n  componentDidMount() {\n    this.fetchTextNotes();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, \" TextNoteListView.js\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: this.state.text_archive_display,\n      onChange: event => this.changeTextArchiveDisplay(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Display Archived Text Notes\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, \" add visual fx on new note button \"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/create_note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"New Note\")), /*#__PURE__*/React.createElement(TextNotes, {\n      data: this.state.text_notes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps)(TextNoteListView);","map":{"version":3,"sources":["C:/Users/alfab/Documents/_Projects/greynotes/frontend/src/containers/TextNoteListView.js"],"names":["React","axios","connect","Checkbox","TextNotes","Link","checkArchived","entry","TextNoteListView","Component","state","text_notes","text_archive_display","text_notes_active_only","fetchTextNotes","get","localStorage","then","res","setState","data","console","log","fetchActiveTextNotes","filter","changeTextArchiveDisplay","event","status","componentDidMount","render","mapStateToProps","token"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport { Checkbox } from 'antd';\r\n\r\nimport TextNotes from '../components/TextNotes.js'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction checkArchived(entry){\r\n  return(entry['archived'])\r\n}\r\n\r\nclass TextNoteListView extends React.Component{\r\n\r\n\r\n\r\n  state ={\r\n    text_notes: [],\r\n    text_archive_display:false,\r\n    text_notes_active_only:[]\r\n  }\r\n\r\n  fetchTextNotes = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/text_notes_by_user?userid=${localStorage['userid']}`).then(res => {\r\n      this.setState({\r\n        text_notes: res.data\r\n      });\r\n      console.log(res.data)\r\n    });\r\n  }\r\n\r\n  fetchActiveTextNotes = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/text_notes_by_user?userid=${localStorage['userid']}`).then(res => {\r\n      this.setState({\r\n        text_notes: res.data.filter(checkArchived)\r\n      });\r\n      console.log(res.data)\r\n    });\r\n  }\r\n\r\n  changeTextArchiveDisplay = (event) => {\r\n    const status = this.state.text_archive_display\r\n    this.setState({\r\n      text_archive_display: !status\r\n    })\r\n    console.log(status)\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.fetchTextNotes();\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n      <h1> TextNoteListView.js</h1>\r\n        <h1>\r\n\r\n          <Checkbox\r\n          checked={this.state.text_archive_display}\r\n          onChange = {(event)=>this.changeTextArchiveDisplay(event)}\r\n          >\r\n          Display Archived Text Notes\r\n\r\n          </Checkbox>\r\n        </h1>\r\n\r\n\r\n      <p> add visual fx on new note button </p>\r\n\r\n      <h2><Link to=\"/create_note\">New Note</Link></h2>\r\n\r\n        <TextNotes data ={this.state.text_notes}/>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.token\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps) (TextNoteListView)\r\n"]},"metadata":{},"sourceType":"module"}