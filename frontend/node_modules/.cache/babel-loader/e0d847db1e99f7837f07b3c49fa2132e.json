{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\src\\\\forms\\\\NoteGroupEdit.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport * as API_PATHS from '../api_path.js';\nconst API_PATH = API_PATHS.API_PATH;\n\nclass NoteGroupEdit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      note_groups: [],\n      userid: ''\n    };\n\n    this.fetchNoteGroups = () => {\n      axios.get(`${API_PATH}api/notegroups_by_user?token=${localStorage['token']}`).then(result => {\n        this.setState({\n          note_groups: result.data\n        });\n        console.log(result.data);\n      });\n    };\n\n    this.fetchUserId = () => {\n      axios.get(`${API_PATH}api/Tokens/${localStorage['token']}/`).then(result => {\n        this.setState({\n          userid: result.data.user\n        });\n      });\n    };\n\n    this.handleGroupRename = event => {\n      const notegroup = event.target.elements.notegroup.value;\n      const newgroupname = event.target.elements.newgroupname.value;\n      axios.put(`${API_PATH}api/NoteGroups/${notegroup}/`, {\n        group_name: newgroupname,\n        author: this.state.userid\n      }).then(res => console.log(res)).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUserId();\n    this.fetchNoteGroups();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => this.handleGroupRename(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"notegroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, \"Rename \"), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"notegroup\",\n      id: \"notegroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, this.state.note_groups.map(val => /*#__PURE__*/React.createElement(\"option\", {\n      value: val.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, val.group_name))), /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"1\",\n      cols: \"50\",\n      name: \"newgroupname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"Rename\")));\n  }\n\n}\n\nexport default NoteGroupEdit;","map":{"version":3,"sources":["C:/Users/alfab/Documents/_Projects/greynotes/frontend/src/forms/NoteGroupEdit.js"],"names":["React","Component","axios","API_PATHS","API_PATH","NoteGroupEdit","state","note_groups","userid","fetchNoteGroups","get","localStorage","then","result","setState","data","console","log","fetchUserId","user","handleGroupRename","event","notegroup","target","elements","value","newgroupname","put","group_name","author","res","catch","err","componentDidMount","render","map","val","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,SAAZ,MAA2B,gBAA3B;AACA,MAAMC,QAAQ,GAAGD,SAAS,CAACC,QAA3B;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAEpCK,KAFoC,GAE7B;AACLC,MAAAA,WAAW,EAAC,EADP;AAELC,MAAAA,MAAM,EAAC;AAFF,KAF6B;;AAAA,SAOpCC,eAPoC,GAOlB,MAAM;AACxBP,MAAAA,KAAK,CAACQ,GAAN,CAAW,GAAEN,QAAS,gCAA+BO,YAAY,CAAC,OAAD,CAAU,EAA3E,EAA8EC,IAA9E,CAAmFC,MAAM,IAAI;AAC3F,aAAKC,QAAL,CAAc;AACZP,UAAAA,WAAW,EAAEM,MAAM,CAACE;AADR,SAAd;AAGAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,IAAnB;AACD,OALD;AAMD,KAdqC;;AAAA,SAgBtCG,WAhBsC,GAgBxB,MAAM;AAClBhB,MAAAA,KAAK,CAACQ,GAAN,CAAW,GAAEN,QAAS,cAAaO,YAAY,CAAC,OAAD,CAAU,GAAzD,EAA6DC,IAA7D,CAAkEC,MAAM,IAAE;AACxE,aAAKC,QAAL,CAAc;AACZN,UAAAA,MAAM,EAACK,MAAM,CAACE,IAAP,CAAYI;AADP,SAAd;AAGD,OAJD;AAKD,KAtBqC;;AAAA,SA4BpCC,iBA5BoC,GA4BhBC,KAAD,IAAS;AAC1B,YAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,QAAb,CAAsBF,SAAtB,CAAgCG,KAAlD;AACA,YAAMC,YAAY,GAAGL,KAAK,CAACE,MAAN,CAAaC,QAAb,CAAsBE,YAAtB,CAAmCD,KAAxD;AACAvB,MAAAA,KAAK,CAACyB,GAAN,CAAW,GAAEvB,QAAS,kBAAiBkB,SAAU,GAAjD,EAAoD;AAClDM,QAAAA,UAAU,EAACF,YADuC;AAElDG,QAAAA,MAAM,EAAE,KAAKvB,KAAL,CAAWE;AAF+B,OAApD,EAMCI,IAND,CAMMkB,GAAG,IAAEd,OAAO,CAACC,GAAR,CAAYa,GAAZ,CANX,EAOCC,KAPD,CAOOC,GAAG,IAAEhB,OAAO,CAACC,GAAR,CAAYe,GAAZ,CAPZ;AASD,KAxCmC;AAAA;;AAuBtCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKf,WAAL;AACA,SAAKT,eAAL;AACD;;AAiBDyB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAM,MAAA,QAAQ,EAAIb,KAAD,IAAS,KAAKD,iBAAL,CAAuBC,KAAvB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAO,MAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,eAEE;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,EAAE,EAAC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKf,KAAL,CAAWC,WAAX,CAAuB4B,GAAvB,CAA4BC,GAAD,iBAC1B;AAAQ,MAAA,KAAK,EAAEA,GAAG,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBD,GAAG,CAACR,UAA5B,CADD,CADD,CAFF,eASE;AAAU,MAAA,IAAI,EAAC,GAAf;AAAmB,MAAA,IAAI,EAAC,IAAxB;AAA6B,MAAA,IAAI,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAWE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,CAFA,CADF;AAoBD;;AAhEmC;;AAmEtC,eAAevB,aAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nclass NoteGroupEdit extends Component {\r\n\r\n  state ={\r\n    note_groups:[],\r\n    userid:''\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n  axios.get(`${API_PATH}api/notegroups_by_user?token=${localStorage['token']}`).then(result => {\r\n    this.setState({\r\n      note_groups: result.data\r\n    });\r\n    console.log(result.data)\r\n  });\r\n}\r\n\r\nfetchUserId = () => {\r\n  axios.get(`${API_PATH}api/Tokens/${localStorage['token']}/`).then(result=>{\r\n    this.setState({\r\n      userid:result.data.user\r\n    })\r\n  })\r\n}\r\ncomponentDidMount() {\r\n    this.fetchUserId()\r\n    this.fetchNoteGroups();\r\n  }\r\n\r\n  handleGroupRename =(event)=>{\r\n    const notegroup = event.target.elements.notegroup.value;\r\n    const newgroupname = event.target.elements.newgroupname.value;\r\n    axios.put(`${API_PATH}api/NoteGroups/${notegroup}/`,{\r\n      group_name:newgroupname,\r\n      author: this.state.userid\r\n\r\n\r\n    })\r\n    .then(res=>console.log(res))\r\n    .catch(err=>console.log(err));\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n      <form onSubmit ={(event)=>this.handleGroupRename(event)}>\r\n      <label for=\"notegroup\">Rename </label>\r\n        <select name=\"notegroup\" id=\"notegroup\">\r\n        {this.state.note_groups.map((val)=>(\r\n          <option value={val.id}>{val.group_name}</option>\r\n        ))}\r\n\r\n        </select>\r\n\r\n        <textarea rows=\"1\" cols=\"50\" name=\"newgroupname\"/>\r\n\r\n        <button type=\"submit\">Rename</button>\r\n\r\n        </form>\r\n        </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default NoteGroupEdit\r\n"]},"metadata":{},"sourceType":"module"}