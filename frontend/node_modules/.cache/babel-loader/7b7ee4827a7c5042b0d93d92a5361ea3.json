{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\src\\\\containers\\\\TextNoteListView.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { Checkbox } from 'antd';\nimport TextNotes from '../components/TextNotes.js';\nimport { Link } from 'react-router-dom';\n\nfunction checkArchived(entry) {\n  return !entry['archived'];\n}\n\nclass TextNoteListView extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userid: '',\n      active_text_notes: [],\n      text_archive_display: false,\n      all_text_notes: []\n    };\n\n    this.fetchUserId = () => {\n      axios.get(`http://127.0.0.1:8000/api/Tokens/${localStorage['token']}/`).then(res => {\n        this.setState({\n          userid: res.data.user\n        });\n        console.log('user fetched is ' + res.data.user);\n      });\n    };\n\n    this.fetchActiveTextNotes = userid => {\n      axios.get(`http://127.0.0.1:8000/api/text_notes_by_user?userid=${userid}`).then(res => {\n        this.setState({\n          active_text_notes: res.data.filter(checkArchived)\n        });\n        console.log(res.data);\n      });\n    };\n\n    this.fetchAllTextNotes = () => {\n      axios.get(`http://127.0.0.1:8000/api/text_notes_by_user?userid=${localStorage['userid']}`).then(res => {\n        this.setState({\n          all_text_notes: res.data\n        });\n        console.log(res.data);\n      });\n    };\n\n    this.changeTextArchiveDisplay = event => {\n      const status = this.state.text_archive_display;\n      this.setState({\n        text_archive_display: !status\n      });\n      console.log(status);\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUserId();\n    this.fetchAllTextNotes();\n    this.fetchActiveTextNotes(1);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, \" TextNoteListView.js - \", this.state.userid), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: this.state.text_archive_display,\n      onChange: event => this.changeTextArchiveDisplay(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Display Archived Text Notes\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, \" add visual fx on new note button \"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/create_note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"New Note\")), this.state.text_archive_display ? /*#__PURE__*/React.createElement(TextNotes, {\n      data: this.state.all_text_notes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }) : /*#__PURE__*/React.createElement(TextNotes, {\n      data: this.state.active_text_notes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps)(TextNoteListView);","map":{"version":3,"sources":["C:/Users/alfab/Documents/_Projects/greynotes/frontend/src/containers/TextNoteListView.js"],"names":["React","axios","connect","Checkbox","TextNotes","Link","checkArchived","entry","TextNoteListView","Component","state","userid","active_text_notes","text_archive_display","all_text_notes","fetchUserId","get","localStorage","then","res","setState","data","user","console","log","fetchActiveTextNotes","filter","fetchAllTextNotes","changeTextArchiveDisplay","event","status","componentDidMount","render","mapStateToProps","token"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport { Checkbox } from 'antd';\r\n\r\nimport TextNotes from '../components/TextNotes.js'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction checkArchived(entry){\r\n  return(!entry['archived'])\r\n}\r\n\r\nclass TextNoteListView extends React.Component{\r\n\r\n  state ={\r\n    userid:'',\r\n    active_text_notes: [],\r\n    text_archive_display:false,\r\n    all_text_notes:[]\r\n  }\r\n\r\n  fetchUserId = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/Tokens/${localStorage['token']}/`).then(res => {\r\n      this.setState({\r\n        userid:res.data.user\r\n      })\r\n      console.log('user fetched is ' + res.data.user )\r\n    })\r\n  }\r\n\r\n  fetchActiveTextNotes = (userid) => {\r\n    axios.get(`http://127.0.0.1:8000/api/text_notes_by_user?userid=${userid}`).then(res => {\r\n      this.setState({\r\n        active_text_notes: res.data.filter(checkArchived)\r\n      });\r\n      console.log(res.data)\r\n    });\r\n  }\r\n\r\n  fetchAllTextNotes = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/text_notes_by_user?userid=${localStorage['userid']}`).then(res => {\r\n      this.setState({\r\n        all_text_notes: res.data\r\n      });\r\n      console.log(res.data)\r\n    });\r\n  }\r\n\r\n  changeTextArchiveDisplay = (event) => {\r\n    const status = this.state.text_archive_display\r\n    this.setState({\r\n      text_archive_display: !status\r\n    })\r\n    console.log(status)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUserId();\r\n    this.fetchAllTextNotes();\r\n    this.fetchActiveTextNotes(1);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n      <h1> TextNoteListView.js - {this.state.userid}</h1>\r\n        <h1>\r\n\r\n          <Checkbox\r\n          checked={this.state.text_archive_display}\r\n          onChange = {(event)=>this.changeTextArchiveDisplay(event)}\r\n          >\r\n          Display Archived Text Notes\r\n\r\n          </Checkbox>\r\n        </h1>\r\n\r\n\r\n      <p> add visual fx on new note button </p>\r\n\r\n      <h2><Link to=\"/create_note\">New Note</Link></h2>\r\n\r\n      {this.state.text_archive_display ?\r\n        <TextNotes data ={this.state.all_text_notes}/>\r\n        :\r\n        <TextNotes data ={this.state.active_text_notes}/>\r\n      }\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.token\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps) (TextNoteListView)\r\n"]},"metadata":{},"sourceType":"module"}