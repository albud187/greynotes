{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import axios from'axios';import*as API_PATHS from'../api_path.js';var API_PATH=API_PATHS.API_PATH;var NoteGroupEdit=/*#__PURE__*/function(_Component){_inherits(NoteGroupEdit,_Component);var _super=_createSuper(NoteGroupEdit);function NoteGroupEdit(){var _this;_classCallCheck(this,NoteGroupEdit);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={note_groups:[],userid:''};_this.fetchNoteGroups=function(){axios.get(\"\".concat(API_PATH,\"api/notegroups_by_user?token=\").concat(localStorage['token'])).then(function(result){_this.setState({note_groups:result.data});console.log(result.data);});};_this.fetchUserId=function(){axios.get(\"\".concat(API_PATH,\"api/Tokens/\").concat(localStorage['token'],\"/\")).then(function(result){_this.setState({userid:result.data.user});});};_this.handleGroupRename=function(event){var notegroup=event.target.elements.notegroup.value;var newgroupname=event.target.elements.newgroupname.value;axios.put(\"\".concat(API_PATH,\"api/NoteGroups/\").concat(notegroup,\"/\"),{group_name:newgroupname,author:_this.state.userid}).then(function(res){return console.log(res);}).catch(function(err){return console.log(err);});};return _this;}_createClass(NoteGroupEdit,[{key:\"componentDidMount\",value:function componentDidMount(){this.fetchUserId();this.fetchNoteGroups();}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:function onSubmit(event){return _this2.handleGroupRename(event);}},/*#__PURE__*/React.createElement(\"label\",{for:\"notegroup\"},\"Rename \"),/*#__PURE__*/React.createElement(\"select\",{name:\"notegroup\",id:\"notegroup\"},this.state.note_groups.map(function(val){return/*#__PURE__*/React.createElement(\"option\",{value:val.id},val.group_name);})),/*#__PURE__*/React.createElement(\"textarea\",{rows:\"1\",cols:\"50\",name:\"newgroupname\"}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Rename\")));}}]);return NoteGroupEdit;}(Component);export default NoteGroupEdit;","map":{"version":3,"sources":["C:/Users/alfab/Documents/_Projects/greynotes/frontend/src/forms/NoteGroupEdit.js"],"names":["React","Component","axios","API_PATHS","API_PATH","NoteGroupEdit","state","note_groups","userid","fetchNoteGroups","get","localStorage","then","result","setState","data","console","log","fetchUserId","user","handleGroupRename","event","notegroup","target","elements","value","newgroupname","put","group_name","author","res","catch","err","map","val","id"],"mappings":"4sBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,GAAKC,CAAAA,SAAZ,KAA2B,gBAA3B,CACA,GAAMC,CAAAA,QAAQ,CAAGD,SAAS,CAACC,QAA3B,C,GAEMC,CAAAA,a,uVAEJC,K,CAAO,CACLC,WAAW,CAAC,EADP,CAELC,MAAM,CAAC,EAFF,C,OAKPC,e,CAAkB,UAAM,CACxBP,KAAK,CAACQ,GAAN,WAAaN,QAAb,yCAAqDO,YAAY,CAAC,OAAD,CAAjE,GAA8EC,IAA9E,CAAmF,SAAAC,MAAM,CAAI,CAC3F,MAAKC,QAAL,CAAc,CACZP,WAAW,CAAEM,MAAM,CAACE,IADR,CAAd,EAGAC,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,IAAnB,EACD,CALD,EAMD,C,OAEDG,W,CAAc,UAAM,CAClBhB,KAAK,CAACQ,GAAN,WAAaN,QAAb,uBAAmCO,YAAY,CAAC,OAAD,CAA/C,OAA6DC,IAA7D,CAAkE,SAAAC,MAAM,CAAE,CACxE,MAAKC,QAAL,CAAc,CACZN,MAAM,CAACK,MAAM,CAACE,IAAP,CAAYI,IADP,CAAd,EAGD,CAJD,EAKD,C,OAMCC,iB,CAAmB,SAACC,KAAD,CAAS,CAC1B,GAAMC,CAAAA,SAAS,CAAGD,KAAK,CAACE,MAAN,CAAaC,QAAb,CAAsBF,SAAtB,CAAgCG,KAAlD,CACA,GAAMC,CAAAA,YAAY,CAAGL,KAAK,CAACE,MAAN,CAAaC,QAAb,CAAsBE,YAAtB,CAAmCD,KAAxD,CACAvB,KAAK,CAACyB,GAAN,WAAavB,QAAb,2BAAuCkB,SAAvC,MAAoD,CAClDM,UAAU,CAACF,YADuC,CAElDG,MAAM,CAAE,MAAKvB,KAAL,CAAWE,MAF+B,CAApD,EAMCI,IAND,CAMM,SAAAkB,GAAG,QAAEd,CAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ,CAAF,EANT,EAOCC,KAPD,CAOO,SAAAC,GAAG,QAAEhB,CAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ,CAAF,EAPV,EASD,C,sGAjBiB,CAChB,KAAKd,WAAL,GACA,KAAKT,eAAL,GACD,C,uCAiBQ,iBACP,mBACE,4CAEA,4BAAM,QAAQ,CAAG,kBAACY,KAAD,QAAS,CAAA,MAAI,CAACD,iBAAL,CAAuBC,KAAvB,CAAT,EAAjB,eACA,6BAAO,GAAG,CAAC,WAAX,YADA,cAEE,8BAAQ,IAAI,CAAC,WAAb,CAAyB,EAAE,CAAC,WAA5B,EACC,KAAKf,KAAL,CAAWC,WAAX,CAAuB0B,GAAvB,CAA2B,SAACC,GAAD,qBAC1B,8BAAQ,KAAK,CAAEA,GAAG,CAACC,EAAnB,EAAwBD,GAAG,CAACN,UAA5B,CAD0B,EAA3B,CADD,CAFF,cASE,gCAAU,IAAI,CAAC,GAAf,CAAmB,IAAI,CAAC,IAAxB,CAA6B,IAAI,CAAC,cAAlC,EATF,cAWE,8BAAQ,IAAI,CAAC,QAAb,WAXF,CAFA,CADF,CAoBD,C,2BAhEyB3B,S,EAmE5B,cAAeI,CAAAA,aAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport * as API_PATHS from '../api_path.js'\r\nconst API_PATH = API_PATHS.API_PATH\r\n\r\nclass NoteGroupEdit extends Component {\r\n\r\n  state ={\r\n    note_groups:[],\r\n    userid:''\r\n  }\r\n\r\n  fetchNoteGroups = () => {\r\n  axios.get(`${API_PATH}api/notegroups_by_user?token=${localStorage['token']}`).then(result => {\r\n    this.setState({\r\n      note_groups: result.data\r\n    });\r\n    console.log(result.data)\r\n  });\r\n}\r\n\r\nfetchUserId = () => {\r\n  axios.get(`${API_PATH}api/Tokens/${localStorage['token']}/`).then(result=>{\r\n    this.setState({\r\n      userid:result.data.user\r\n    })\r\n  })\r\n}\r\ncomponentDidMount() {\r\n    this.fetchUserId()\r\n    this.fetchNoteGroups();\r\n  }\r\n\r\n  handleGroupRename =(event)=>{\r\n    const notegroup = event.target.elements.notegroup.value;\r\n    const newgroupname = event.target.elements.newgroupname.value;\r\n    axios.put(`${API_PATH}api/NoteGroups/${notegroup}/`,{\r\n      group_name:newgroupname,\r\n      author: this.state.userid\r\n\r\n\r\n    })\r\n    .then(res=>console.log(res))\r\n    .catch(err=>console.log(err));\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n      <form onSubmit ={(event)=>this.handleGroupRename(event)}>\r\n      <label for=\"notegroup\">Rename </label>\r\n        <select name=\"notegroup\" id=\"notegroup\">\r\n        {this.state.note_groups.map((val)=>(\r\n          <option value={val.id}>{val.group_name}</option>\r\n        ))}\r\n\r\n        </select>\r\n\r\n        <textarea rows=\"1\" cols=\"50\" name=\"newgroupname\"/>\r\n\r\n        <button type=\"submit\">Rename</button>\r\n\r\n        </form>\r\n        </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default NoteGroupEdit\r\n"]},"metadata":{},"sourceType":"module"}