{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\src\\\\containers\\\\Signup.js\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\nimport { Form, Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\n\nclass Signup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmDirty: false\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          this.props.onAuth(values.userName, values.email, values.password, values.confirm);\n          this.props.history.push('/');\n        }\n      });\n    };\n\n    this.handleConfirmBlur = e => {\n      const value = e.target.value;\n      this.setState({\n        confirmDirty: this.state.confirmDirty || !!value\n      });\n    };\n\n    this.compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    this.validateToNextPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, \"signup class component\");\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/alfab/Documents/_Projects/greynotes/frontend/src/containers/Signup.js"],"names":["React","NavLink","actions","Form","Input","Button","Spin","connect","Signup","Component","state","confirmDirty","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","onAuth","userName","email","password","confirm","history","push","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,IAA9B,QAAyC,MAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE3B;AACRC,MAAAA,YAAY,EAAE;AADN,KAF2B;;AAAA,SAMrCC,YANqC,GAMrBC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,KAAL,CAAWC,IAAX,CAAgBC,uBAAhB,CAAwC,CAACC,GAAD,EAAMC,MAAN,KAAiB;AACvD,YAAI,CAACD,GAAL,EAAU;AACR,eAAKH,KAAL,CAAWK,MAAX,CACID,MAAM,CAACE,QADX,EAEIF,MAAM,CAACG,KAFX,EAGIH,MAAM,CAACI,QAHX,EAIIJ,MAAM,CAACK,OAJX;AAMA,eAAKT,KAAL,CAAWU,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACF,OAVD;AAWD,KAnBoC;;AAAA,SAqBrCC,iBArBqC,GAqBhBd,CAAD,IAAO;AACvB,YAAMe,KAAK,GAAGf,CAAC,CAACgB,MAAF,CAASD,KAAvB;AACA,WAAKE,QAAL,CAAc;AAAEnB,QAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,YAAX,IAA2B,CAAC,CAACiB;AAA7C,OAAd;AACD,KAxBkC;;AAAA,SA0BnCG,sBA1BmC,GA0BV,CAACC,IAAD,EAAOJ,KAAP,EAAcK,QAAd,KAA2B;AAClD,YAAMjB,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAxB;;AACA,UAAIY,KAAK,IAAIA,KAAK,KAAKZ,IAAI,CAACkB,aAAL,CAAmB,UAAnB,CAAvB,EAAuD;AACrDD,QAAAA,QAAQ,CAAC,+CAAD,CAAR;AACD,OAFD,MAEO;AACLA,QAAAA,QAAQ;AACT;AACF,KAjCkC;;AAAA,SAmCnCE,sBAnCmC,GAmCV,CAACH,IAAD,EAAOJ,KAAP,EAAcK,QAAd,KAA2B;AAClD,YAAMjB,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAxB;;AACA,UAAIY,KAAK,IAAI,KAAKlB,KAAL,CAAWC,YAAxB,EAAsC;AACpCK,QAAAA,IAAI,CAACoB,cAAL,CAAoB,CAAC,SAAD,CAApB,EAAiC;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAjC;AACD;;AACDJ,MAAAA,QAAQ;AACT,KAzCkC;AAAA;;AA2CnCK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF;AAGD;;AA/CkC;;AAkDrC,eAAe9B,MAAf","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as actions from '../store/actions/auth';\r\nimport { Form, Input, Button, Spin} from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Signup extends React.Component {\r\n\r\n  state = {\r\n  confirmDirty: false,\r\n};\r\n\r\nhandleSubmit = (e) => {\r\n  e.preventDefault();\r\n  this.props.form.validateFieldsAndScroll((err, values) => {\r\n    if (!err) {\r\n      this.props.onAuth(\r\n          values.userName,\r\n          values.email,\r\n          values.password,\r\n          values.confirm\r\n      );\r\n      this.props.history.push('/');\r\n    }\r\n  });\r\n}\r\n\r\nhandleConfirmBlur = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  }\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>signup class component</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Signup\r\n"]},"metadata":{},"sourceType":"module"}