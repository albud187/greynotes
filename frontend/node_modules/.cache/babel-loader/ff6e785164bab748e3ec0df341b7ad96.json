{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\src\\\\containers\\\\Signup.js\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\nimport { Form, Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\n\nclass Signup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmDirty: false\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          this.props.onAuth(values.userName, values.email, values.password, values.confirm);\n          this.props.history.push('/');\n        }\n      });\n    };\n\n    this.handleConfirmBlur = e => {\n      const value = e.target.value;\n      this.setState({\n        confirmDirty: this.state.confirmDirty || !!value\n      });\n    };\n\n    this.compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    this.validateToNextPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => this.handleSubmit(event),\n      class: \"loginform\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"userName\",\n      placeholder: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      placeholder: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"confirm\",\n      placeholder: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        marginRight: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Signup\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["C:/Users/alfab/Documents/_Projects/greynotes/frontend/src/containers/Signup.js"],"names":["React","NavLink","actions","Form","Input","Button","Spin","connect","Signup","Component","state","confirmDirty","handleSubmit","event","preventDefault","props","form","validateFieldsAndScroll","err","values","onAuth","userName","email","password","confirm","history","push","handleConfirmBlur","e","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","render","marginRight","mapStateToProps","loading","error","mapDispatchToProps","dispatch","username","password1","password2","authSignup"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as actions from '../store/actions/auth';\r\nimport { Form, Input, Button, Spin} from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Signup extends React.Component {\r\n\r\n  state = {\r\n  confirmDirty: false,\r\n};\r\n\r\nhandleSubmit = (event) => {\r\n  event.preventDefault();\r\n  this.props.form.validateFieldsAndScroll((err, values) => {\r\n    if (!err) {\r\n      this.props.onAuth(\r\n          values.userName,\r\n          values.email,\r\n          values.password,\r\n          values.confirm\r\n      );\r\n      this.props.history.push('/');\r\n    }\r\n  });\r\n}\r\n\r\nhandleConfirmBlur = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  }\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n            <form onSubmit={(event)=>this.handleSubmit(event)} class=\"loginform\">\r\n                <input name='userName' placeholder= \"username\"/>\r\n                <br/>\r\n                <input name='email' placeholder= \"email\"/>\r\n                <br/>\r\n                <input type=\"password\" name=\"password\" placeholder=\"password\" />\r\n                <br/>\r\n                <input type=\"password\" name=\"confirm\" placeholder=\"password\" />\r\n                <br/>\r\n\r\n                <button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\r\n                    Signup\r\n                </button>\r\n\r\n              </form>\r\n          </div>    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)\r\n"]},"metadata":{},"sourceType":"module"}