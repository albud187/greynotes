{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\alfab\\\\Documents\\\\_Projects\\\\greynotes\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import axios from'axios';import{Button,Card}from'antd';import TextNoteDetailUpdate from'../forms/TextNoteDetailUpdate.js';var TextNoteDetail=/*#__PURE__*/function(_React$Component){_inherits(TextNoteDetail,_React$Component);var _super=_createSuper(TextNoteDetail);function TextNoteDetail(){var _this;_classCallCheck(this,TextNoteDetail);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={textnote:{},userid:''};_this.fetchUserId=function(){axios.get(\"http://127.0.0.1:8000/api/Tokens/\".concat(localStorage['token'],\"/\")).then(function(result){_this.setState({userid:result.data.user});console.log(_this.state.userid);});};_this.handleDelete=function(event){event.preventDefault();var textnoteID=_this.props.match.params.textnoteID;axios.delete(\"http://127.0.0.1:8000/api/TextNotes/\".concat(textnoteID,\"/\"));_this.forceUpdate();_this.props.history.push('/text_note_list');_this.forceUpdate();};return _this;}_createClass(TextNoteDetail,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.fetchUserId();var textnoteID=this.props.match.params.textnoteID;axios.get(\"http://127.0.0.1:8000/api/TextNotes/\".concat(textnoteID,\"/\")).then(function(res){_this2.setState({textnote:res.data});console.log(_this2.state.textnote.title);});console.log('test');}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",null,this.state.textnote.author==this.state.userid?/*#__PURE__*/React.createElement(TextNoteDetailUpdate,{requestType:\"put\",textnoteID:this.props.match.params.textnoteID,textnoteContent:this.state.textnote.content,textnoteTitle:this.state.textnote.title}):/*#__PURE__*/React.createElement(\"h1\",null,\" You are not logged in as the correct user\"),this.state.textnote.author==this.state.userid?/*#__PURE__*/React.createElement(\"form\",{onSubmit:function onSubmit(event){return _this3.handleDelete(event);}},/*#__PURE__*/React.createElement(Button,{type:\"danger\",htmlType:\"submit\"},\"Delete\")):/*#__PURE__*/React.createElement(\"h1\",null,\" \"));}}]);return TextNoteDetail;}(React.Component);export default TextNoteDetail;","map":{"version":3,"sources":["C:/Users/alfab/Documents/_Projects/greynotes/frontend/src/containers/TextNoteDetailView.js"],"names":["React","axios","Button","Card","TextNoteDetailUpdate","TextNoteDetail","state","textnote","userid","fetchUserId","get","localStorage","then","result","setState","data","user","console","log","handleDelete","event","preventDefault","textnoteID","props","match","params","delete","forceUpdate","history","push","res","title","author","content","Component"],"mappings":"4sBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,MAAR,CAAgBC,IAAhB,KAA2B,MAA3B,CACA,MAAOC,CAAAA,oBAAP,KAAiC,kCAAjC,C,GAEMC,CAAAA,c,uWAEJC,K,CAAO,CACLC,QAAQ,CAAE,EADL,CAELC,MAAM,CAAC,EAFF,C,OAKPC,W,CAAc,UAAM,CAClBR,KAAK,CAACS,GAAN,4CAA8CC,YAAY,CAAC,OAAD,CAA1D,OAAwEC,IAAxE,CAA6E,SAAAC,MAAM,CAAE,CACnF,MAAKC,QAAL,CAAc,CACZN,MAAM,CAACK,MAAM,CAACE,IAAP,CAAYC,IADP,CAAd,EAGAC,OAAO,CAACC,GAAR,CAAY,MAAKZ,KAAL,CAAWE,MAAvB,EACD,CALD,EAMD,C,OAiBCW,Y,CAAe,SAACC,KAAD,CAAW,CACxBA,KAAK,CAACC,cAAN,GACA,GAAMC,CAAAA,UAAU,CAAG,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,UAA3C,CACArB,KAAK,CAACyB,MAAN,+CAAoDJ,UAApD,OACE,MAAKK,WAAL,GACA,MAAKJ,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,iBAAxB,EACA,MAAKF,WAAL,GACH,C,uGArBiB,iBAClB,KAAKlB,WAAL,GACE,GAAMa,CAAAA,UAAU,CAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,UAA3C,CACArB,KAAK,CAACS,GAAN,+CAAiDY,UAAjD,OACGV,IADH,CACQ,SAAAkB,GAAG,CAAI,CACb,MAAI,CAAChB,QAAL,CAAc,CACZP,QAAQ,CAAEuB,GAAG,CAACf,IADF,CAAd,EAGAE,OAAO,CAACC,GAAR,CAAY,MAAI,CAACZ,KAAL,CAAWC,QAAX,CAAoBwB,KAAhC,EACD,CAND,EAOAd,OAAO,CAACC,GAAR,CAAY,MAAZ,EACD,C,uCAYK,iBACN,mBACE,+BAEC,KAAKZ,KAAL,CAAWC,QAAX,CAAoByB,MAApB,EAA8B,KAAK1B,KAAL,CAAWE,MAAzC,cACD,oBAAC,oBAAD,EACE,WAAW,CAAC,KADd,CAEE,UAAU,CAAE,KAAKe,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,UAFtC,CAGE,eAAe,CAAE,KAAKhB,KAAL,CAAWC,QAAX,CAAoB0B,OAHvC,CAIE,aAAa,CAAI,KAAK3B,KAAL,CAAWC,QAAX,CAAoBwB,KAJvC,EADC,cAOD,2EATA,CAaD,KAAKzB,KAAL,CAAWC,QAAX,CAAoByB,MAApB,EAA8B,KAAK1B,KAAL,CAAWE,MAAzC,cAED,4BAAM,QAAQ,CAAE,kBAACY,KAAD,QAAS,CAAA,MAAI,CAACD,YAAL,CAAkBC,KAAlB,CAAT,EAAhB,eACE,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,QAAQ,CAAC,QAA/B,WADF,CAFC,cAMD,kCAnBE,CADF,CA2BD,C,4BApE0BpB,KAAK,CAACkC,S,EAuEnC,cAAe7B,CAAAA,cAAf","sourcesContent":["import React from 'react'\r\nimport axios from 'axios';\r\nimport {Button, Card} from 'antd'\r\nimport TextNoteDetailUpdate from '../forms/TextNoteDetailUpdate.js'\r\n\r\nclass TextNoteDetail extends React.Component{\r\n\r\n  state ={\r\n    textnote: {},\r\n    userid:''\r\n  }\r\n\r\n  fetchUserId = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/Tokens/${localStorage['token']}/`).then(result=>{\r\n      this.setState({\r\n        userid:result.data.user\r\n      })\r\n      console.log(this.state.userid)\r\n    })\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.fetchUserId();\r\n      const textnoteID = this.props.match.params.textnoteID;\r\n      axios.get(`http://127.0.0.1:8000/api/TextNotes/${textnoteID}/`)\r\n        .then(res => {\r\n        this.setState({\r\n          textnote: res.data\r\n        });\r\n        console.log(this.state.textnote.title)\r\n      });\r\n      console.log('test')\r\n    }\r\n\r\n\r\n    handleDelete = (event) => {\r\n      event.preventDefault()\r\n      const textnoteID = this.props.match.params.textnoteID;\r\n      axios.delete(`http://127.0.0.1:8000/api/TextNotes/${textnoteID}/`)\r\n        this.forceUpdate();\r\n        this.props.history.push('/text_note_list');\r\n        this.forceUpdate();\r\n    }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n\r\n      {this.state.textnote.author == this.state.userid?\r\n      <TextNoteDetailUpdate\r\n        requestType=\"put\"\r\n        textnoteID={this.props.match.params.textnoteID}\r\n        textnoteContent={this.state.textnote.content}\r\n        textnoteTitle = {this.state.textnote.title}/>\r\n      :\r\n      <h1> You are not logged in as the correct user</h1>\r\n\r\n    }\r\n\r\n    {this.state.textnote.author == this.state.userid ?\r\n\r\n    <form onSubmit={(event)=>this.handleDelete(event)}>\r\n      <Button type='danger' htmlType='submit'>Delete</Button>\r\n    </form>\r\n    :\r\n    <h1> </h1>\r\n    }\r\n\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default TextNoteDetail\r\n"]},"metadata":{},"sourceType":"module"}